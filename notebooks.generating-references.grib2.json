{"version":2,"kind":"Notebook","sha256":"8b335caab16650611904e50e2d3dfe45ad615665acb3e0bb5b48b2013f34c2ac","slug":"notebooks.generating-references.grib2","location":"/notebooks/generating_references/GRIB2.ipynb","dependencies":[],"frontmatter":{"title":"GRIB2","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"authors":[{"nameParsed":{"literal":"Norland Raphael Hagen","given":"Norland Raphael","family":"Hagen"},"name":"Norland Raphael Hagen","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/kerchunk-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/kerchunk-cookbook/blob/main/notebooks/generating_references/GRIB2.ipynb","thumbnail":"/kerchunk-cookbook/build/GRIB2-98b8ad3cf0f1242d8c81d865bc70cf18.png","exports":[{"format":"ipynb","filename":"GRIB2.ipynb","url":"/kerchunk-cookbook/build/GRIB2-53f598ffb8a67ef1bb4d3b88061a7ca0.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Generating Kerchunk References from GRIB2 files","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"id9MQvqaZe"}],"key":"RPu6lsDuEa"}],"key":"tIKJzHBZSJ"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/kerchunk-cookbook/build/GRIB2-98b8ad3cf0f1242d8c81d865bc70cf18.png","alt":"HRRR GRIB2","width":350,"key":"wZC2iKEW3J","urlSource":"../images/GRIB2.png"}],"key":"D4fensRHij"}],"key":"VBxWaTGnSe"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FNzYfVfNQF"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"JCa61ESBKY"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Within this notebook, we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TNi51Hz96X"}],"key":"zuk7hajrL9"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Generating a list of GRIB2 files on a remote filesystem using ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KVP9dYTQu9"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"tUkFCSllrm"}],"key":"Hepdp1Aejc"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"How to create reference files of GRIB2 files using ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"HBTtjgU7Tk"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"tHPEjgLVuR"}],"key":"RTsBXg2Ofk"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Combining multiple ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"RatckKxtI5"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jF6ea1b526"},{"type":"text","value":" reference files using ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cp0gKDvp0O"},{"type":"inlineCode","value":"MultiZarrToZarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"zzhbZ4Ovv5"}],"key":"M2Er7FPQlI"}],"key":"X4dCZ8tpXg"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"This notebook shares many similarities with the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"SZurWUoLwx"},{"type":"link","url":"../foundations/kerchunk_multi_file.ipynb","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Multi-File Datasets with Kerchunk","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"F99eRhg7UO"}],"urlSource":"../foundations/kerchunk_multi_file.ipynb","key":"L0Vj6hcZHl"},{"type":"text","value":" and the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Qi97PELCqG"},{"type":"link","url":"../case_studies/ARG_Weather.ipynb","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"NetCDF/HDF5 Argentinian Weather Dataset Case Study","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"kIj4Ffogc5"}],"urlSource":"../case_studies/ARG_Weather.ipynb","key":"SmPfaGH0tF"},{"type":"text","value":", however this case studies examines another data format and uses ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"nofVPWtTJG"},{"type":"inlineCode","value":"kerchunk.scan_grib","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"mpyzHGvfVn"},{"type":"text","value":" to create reference files.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"P8Tc9yLHif"}],"key":"g5AfO8oozJ"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"This notebook borrows heavily from this ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VDWvlNqQ22"},{"type":"link","url":"https://gist.github.com/peterm790/92eb1df3d58ba41d3411f8a840be2452","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"GIST","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"YIBfkbRUvB"}],"urlSource":"https://gist.github.com/peterm790/92eb1df3d58ba41d3411f8a840be2452","key":"qtqD43Wgxo"},{"type":"text","value":" created by ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Hqq5fpdU8w"},{"type":"link","url":"https://gist.github.com/peterm790","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Peter Marsh","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"jxIuOgTeae"}],"urlSource":"https://gist.github.com/peterm790","key":"HWZebSiruC"},{"type":"text","value":".","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"uARuf5P6VM"}],"key":"kGnkwH42je"},{"type":"heading","depth":2,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"NRIBZILNTI"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"wC0eX8cbFi"},{"type":"table","position":{"start":{"line":15,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"IIrAWMjuum"}],"key":"OJH7BE5feb"},{"type":"tableCell","header":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"VsNxE1dlx5"}],"key":"KN7cG1pdI4"},{"type":"tableCell","header":true,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"xEfOhn7n9U"}],"key":"vmQDJovZdz"}],"key":"XN0oPf6ydm"},{"type":"tableRow","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"link","url":"../foundations/kerchunk_basics","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Kerchunk Basics","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"O9qDSHI18J"}],"urlSource":"../foundations/kerchunk_basics","key":"oWMr0Cn0xE"}],"key":"YPlMH1axWP"},{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"k5Hdjty7mk"}],"key":"IHgld1Dnvm"},{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"heUbpQqJOu"}],"key":"nNADMUwe3N"}],"key":"kOBzzj7XAO"},{"type":"tableRow","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"../foundations/kerchunk_multi_file","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Multiple Files and Kerchunk","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"GrJvagpdFK"}],"urlSource":"../foundations/kerchunk_multi_file","key":"lU7DF3RD9L"}],"key":"kaDcFXzyVa"},{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"TSoG1gUgtg"}],"key":"qhAVpzYcAw"},{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"B20KPgU4RA"}],"key":"SAu83tdCxp"}],"key":"UMZVNYU8v6"},{"type":"tableRow","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"link","url":"../foundations/kerchunk_dask","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Kerchunk and Dask","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"OOD0liLIuB"}],"urlSource":"../foundations/kerchunk_dask","key":"XP75ulvL28"}],"key":"SWcwctv3az"},{"type":"tableCell","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"CNpnMS3fVj"}],"key":"rkgVfcpDoi"},{"type":"tableCell","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"WWI8ZSouPv"}],"key":"oI09Y5uUXJ"}],"key":"VHJcTRotc4"},{"type":"tableRow","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Introduction to Xarray","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"Lo4ce0JvAl"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","key":"CYwtmYZWds"}],"key":"ylPb9Ic8Mm"},{"type":"tableCell","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"M4hRFkV6Jh"}],"key":"zECkxxtB8L"},{"type":"tableCell","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"IO/Visualization","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"ealWEhcrGS"}],"key":"YF2cKJk01t"}],"key":"ZYZXBQqlTn"}],"key":"zLdbZTy5qH"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"strong","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"FsUZOq3gTS"}],"key":"Q5Muo5gleq"},{"type":"text","value":": 45 minutes","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"Nb9EoLaoQq"}],"key":"K6PloADRMU"}],"key":"sM1W96rZgG"},{"type":"thematicBreak","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"S6MN7pX9qj"}],"key":"OXx5cBCqt9"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Motivation","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YijunAqqpY"}],"identifier":"motivation","label":"Motivation","html_id":"motivation","implicit":true,"key":"V1Ob9ZkLJw"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zQkz4Q3bmz"},{"type":"text","value":" supports multiple input file formats. One of these is ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"z4W3CNIL7C"},{"type":"inlineCode","value":"GRIB2(GRIdded Information in Binary form)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ARgiNKQTPM"},{"type":"text","value":", which is a binary file format primary used in meteorology and weather datasets. Similar to NetCDF/HDF5, GRIB2 does not support efficient, parallel access. Using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"e9vYfLOyhH"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sFYzQokdzk"},{"type":"text","value":", we can read this legacy format as if it were an ARCO (Analysis-Ready, Cloud-Optimized) data format such as Zarr.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"YqC3RYERE9"}],"key":"B1LPKVKMpn"}],"key":"Zeq0cnPTh7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"About the Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QLHoyaFYt9"}],"identifier":"about-the-dataset","label":"About the Dataset","html_id":"about-the-dataset","implicit":true,"key":"CralXzvXd4"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Mzg2xPRIFM"},{"type":"inlineCode","value":"HRRR","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"t6H7UnZtIj"},{"type":"text","value":" is a NOAA real-time 3-km resolution, hourly updated, cloud-resolving, convection-allowing atmospheric model, initialized by 3km grids with 3km radar assimilation. Radar data is assimilated in the HRRR every 15 min over a 1-h period adding further detail to that provided by the hourly data assimilation from the 13km radar-enhanced Rapid Refresh.\nNOAA releases a copy of this dataset via the AWS Registry of Open Data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QBBKYwl9lb"}],"key":"bgyIgbk8ki"}],"key":"Aikdp8bHKs"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Flags","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"UGOlAdpDiW"}],"identifier":"flags","label":"Flags","html_id":"flags","implicit":true,"key":"XTKfziJgTa"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In the section below, set the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ODA3sLVwN2"},{"type":"inlineCode","value":"subset","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Q2ETk5MOzj"},{"type":"text","value":" flag to be ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V3Sx26AxtM"},{"type":"inlineCode","value":"True","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"L2JA7TQbi8"},{"type":"text","value":" (default) or ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"tzA3A1wlfb"},{"type":"inlineCode","value":"False","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HUppyh3sqx"},{"type":"text","value":" depending if you want this notebook to process the full file list. If set to ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KpJalOqPWV"},{"type":"inlineCode","value":"True","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"E2RwTZnUzU"},{"type":"text","value":", then a subset of the file list will be processed (Recommended)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"jvCOFheyiB"}],"key":"U2d7XpXXlM"}],"key":"Hp1Yvx3rHc"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"subset_flag = True","key":"mDsb4m57Gz"},{"type":"output","id":"ytGIBkHjlCz8zP4qT-5K1","data":[],"key":"xpKaVS0kg4"}],"key":"QktLB9FNCY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ad5eBDpNox"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"lfi6ptT486"}],"key":"I8VxOj3xvI"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import glob\nimport logging\nfrom tempfile import TemporaryDirectory\n\nimport dask\nimport fsspec\nimport ujson\nfrom distributed import Client\nfrom kerchunk.combine import MultiZarrToZarr\nfrom kerchunk.grib2 import scan_grib","key":"LAcNjrSvpQ"},{"type":"output","id":"l6nAXEndZvDRj-afhEnrW","data":[],"key":"lur5LuQmkK"}],"key":"nFZYdoo9bQ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create Input File List","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tavqscT6je"}],"identifier":"create-input-file-list","label":"Create Input File List","html_id":"create-input-file-list","implicit":true,"key":"TnbNK3WHUr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Here we create ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"emQxBftAxB"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"n7cQR0F1ss"},{"type":"text","value":" files-systems for reading remote files and writing local reference files.\nNext we are using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j1VrGgfAlu"},{"type":"inlineCode","value":"fsspec.glob","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WOnMlmD10F"},{"type":"text","value":" to retrieve a list of file paths and appending the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VI0hBc0121"},{"type":"inlineCode","value":"s3://","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cUMd8YZfrx"},{"type":"text","value":" prefix to them.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cu1cL9SWY5"}],"key":"M0a1KXSKnn"}],"key":"W06LLo5JhC"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initiate fsspec filesystems for reading and writing\nfs_read = fsspec.filesystem(\"s3\", anon=True, skip_instance_cache=True)\n\n# retrieve list of available days in archive\ndays_available = fs_read.glob(\"s3://noaa-hrrr-bdp-pds/hrrr.*\")\n\n# Read HRRR GRIB2 files from April 19, 2023\nfiles = fs_read.glob(\"s3://noaa-hrrr-bdp-pds/hrrr.20230419/conus/*wrfsfcf01.grib2\")\n\n# Append s3 prefix for filelist\nfiles = sorted([\"s3://\" + f for f in files])\n\n# If the subset_flag == True (default), the list of input files will be subset to\n# speed up the processing\nif subset_flag:\n    files = files[0:2]","key":"DlqOMULZ0m"},{"type":"output","id":"cQh2Udr0pfbKhlB6xCKq6","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mAttributeError\u001b[39m                            Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[3]\u001b[39m\u001b[32m, line 5\u001b[39m\n\u001b[32m      2\u001b[39m fs_read = fsspec.filesystem(\u001b[33m\"\u001b[39m\u001b[33ms3\u001b[39m\u001b[33m\"\u001b[39m, anon=\u001b[38;5;28;01mTrue\u001b[39;00m, skip_instance_cache=\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[32m      4\u001b[39m \u001b[38;5;66;03m# retrieve list of available days in archive\u001b[39;00m\n\u001b[32m----> \u001b[39m\u001b[32m5\u001b[39m days_available = \u001b[43mfs_read\u001b[49m\u001b[43m.\u001b[49m\u001b[43mglob\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43ms3://noaa-hrrr-bdp-pds/hrrr.*\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[32m      7\u001b[39m \u001b[38;5;66;03m# Read HRRR GRIB2 files from April 19, 2023\u001b[39;00m\n\u001b[32m      8\u001b[39m files = fs_read.glob(\u001b[33m\"\u001b[39m\u001b[33ms3://noaa-hrrr-bdp-pds/hrrr.20230419/conus/*wrfsfcf01.grib2\u001b[39m\u001b[33m\"\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:118\u001b[39m, in \u001b[36msync_wrapper.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m    115\u001b[39m \u001b[38;5;129m@functools\u001b[39m.wraps(func)\n\u001b[32m    116\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mwrapper\u001b[39m(*args, **kwargs):\n\u001b[32m    117\u001b[39m     \u001b[38;5;28mself\u001b[39m = obj \u001b[38;5;129;01mor\u001b[39;00m args[\u001b[32m0\u001b[39m]\n\u001b[32m--> \u001b[39m\u001b[32m118\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43msync\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mloop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfunc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:103\u001b[39m, in \u001b[36msync\u001b[39m\u001b[34m(loop, func, timeout, *args, **kwargs)\u001b[39m\n\u001b[32m    101\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m FSTimeoutError \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mreturn_result\u001b[39;00m\n\u001b[32m    102\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(return_result, \u001b[38;5;167;01mBaseException\u001b[39;00m):\n\u001b[32m--> \u001b[39m\u001b[32m103\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m return_result\n\u001b[32m    104\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    105\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m return_result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:56\u001b[39m, in \u001b[36m_runner\u001b[39m\u001b[34m(event, coro, result, timeout)\u001b[39m\n\u001b[32m     54\u001b[39m     coro = asyncio.wait_for(coro, timeout=timeout)\n\u001b[32m     55\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m56\u001b[39m     result[\u001b[32m0\u001b[39m] = \u001b[38;5;28;01mawait\u001b[39;00m coro\n\u001b[32m     57\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\u001b[32m     58\u001b[39m     result[\u001b[32m0\u001b[39m] = ex\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:807\u001b[39m, in \u001b[36mAsyncFileSystem._glob\u001b[39m\u001b[34m(self, path, maxdepth, **kwargs)\u001b[39m\n\u001b[32m    804\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    805\u001b[39m         depth = \u001b[38;5;28;01mNone\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m807\u001b[39m allpaths = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._find(\n\u001b[32m    808\u001b[39m     root, maxdepth=depth, withdirs=\u001b[38;5;28;01mTrue\u001b[39;00m, detail=\u001b[38;5;28;01mTrue\u001b[39;00m, **kwargs\n\u001b[32m    809\u001b[39m )\n\u001b[32m    811\u001b[39m pattern = glob_translate(path + (\u001b[33m\"\u001b[39m\u001b[33m/\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m ends_with_sep \u001b[38;5;28;01melse\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m))\n\u001b[32m    812\u001b[39m pattern = re.compile(pattern)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:558\u001b[39m, in \u001b[36mS3FileSystem._find\u001b[39m\u001b[34m(self, path, maxdepth, withdirs, detail)\u001b[39m\n\u001b[32m    556\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[33m\"\u001b[39m\u001b[33mCannot traverse all of S3\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m    557\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m maxdepth:\n\u001b[32m--> \u001b[39m\u001b[32m558\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28msuper\u001b[39m()._find(\n\u001b[32m    559\u001b[39m         bucket + \u001b[33m\"\u001b[39m\u001b[33m/\u001b[39m\u001b[33m\"\u001b[39m + key, maxdepth=maxdepth, withdirs=withdirs, detail=detail\n\u001b[32m    560\u001b[39m     )\n\u001b[32m    561\u001b[39m \u001b[38;5;66;03m# TODO: implement find from dircache, if all listings are present\u001b[39;00m\n\u001b[32m    562\u001b[39m \u001b[38;5;66;03m# if refresh is False:\u001b[39;00m\n\u001b[32m    563\u001b[39m \u001b[38;5;66;03m#     out = incomplete_tree_dirs(self.dircache, path)\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m    568\u001b[39m \u001b[38;5;66;03m#         return super().find(path)\u001b[39;00m\n\u001b[32m    569\u001b[39m \u001b[38;5;66;03m#     # else: we refresh anyway, having at least two missing trees\u001b[39;00m\n\u001b[32m    570\u001b[39m out = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._lsdir(path, delimiter=\u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:847\u001b[39m, in \u001b[36mAsyncFileSystem._find\u001b[39m\u001b[34m(self, path, maxdepth, withdirs, **kwargs)\u001b[39m\n\u001b[32m    843\u001b[39m detail = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33mdetail\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[32m    845\u001b[39m \u001b[38;5;66;03m# Add the root directory if withdirs is requested\u001b[39;00m\n\u001b[32m    846\u001b[39m \u001b[38;5;66;03m# This is needed for posix glob compliance\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m847\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m withdirs \u001b[38;5;129;01mand\u001b[39;00m path != \u001b[33m\"\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._isdir(path):\n\u001b[32m    848\u001b[39m     out[path] = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._info(path)\n\u001b[32m    850\u001b[39m \u001b[38;5;66;03m# async for?\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:999\u001b[39m, in \u001b[36mS3FileSystem._isdir\u001b[39m\u001b[34m(self, path)\u001b[39m\n\u001b[32m    997\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[32m    998\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m999\u001b[39m     out = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._lsdir(path)\n\u001b[32m   1000\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[32m   1001\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mFileNotFoundError\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:509\u001b[39m, in \u001b[36mS3FileSystem._lsdir\u001b[39m\u001b[34m(self, path, refresh, max_items, delimiter)\u001b[39m\n\u001b[32m    507\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m    508\u001b[39m     logger.debug(\u001b[33m\"\u001b[39m\u001b[33mGet directory listing page for \u001b[39m\u001b[38;5;132;01m%s\u001b[39;00m\u001b[33m\"\u001b[39m % path)\n\u001b[32m--> \u001b[39m\u001b[32m509\u001b[39m     \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._connect()\n\u001b[32m    510\u001b[39m     pag = \u001b[38;5;28mself\u001b[39m.s3.get_paginator(\u001b[33m\"\u001b[39m\u001b[33mlist_objects_v2\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m    511\u001b[39m     config = {}\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:365\u001b[39m, in \u001b[36mS3FileSystem._connect\u001b[39m\u001b[34m(self, refresh, kwargs)\u001b[39m\n\u001b[32m    363\u001b[39m     config_kwargs[\u001b[33m\"\u001b[39m\u001b[33msignature_version\u001b[39m\u001b[33m\"\u001b[39m] = UNSIGNED\n\u001b[32m    364\u001b[39m conf = AioConfig(**config_kwargs)\n\u001b[32m--> \u001b[39m\u001b[32m365\u001b[39m \u001b[38;5;28mself\u001b[39m.session = \u001b[43maiobotocore\u001b[49m\u001b[43m.\u001b[49m\u001b[43mAioSession\u001b[49m(**\u001b[38;5;28mself\u001b[39m.kwargs)\n\u001b[32m    366\u001b[39m s3creator = \u001b[38;5;28mself\u001b[39m.session.create_client(\n\u001b[32m    367\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33ms3\u001b[39m\u001b[33m\"\u001b[39m, config=conf, **init_kwargs, **client_kwargs\n\u001b[32m    368\u001b[39m )\n\u001b[32m    369\u001b[39m \u001b[38;5;28mself\u001b[39m._s3creator = s3creator\n\n\u001b[31mAttributeError\u001b[39m: module 'aiobotocore' has no attribute 'AioSession'","ename":"AttributeError","evalue":"module 'aiobotocore' has no attribute 'AioSession'"}],"key":"KTwyVUZNdR"}],"key":"uFGY8b6tJy"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Start a Dask Client","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nflc5aYyWa"}],"identifier":"start-a-dask-client","label":"Start a Dask Client","html_id":"start-a-dask-client","implicit":true,"key":"cjxukV4EXU"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To parallelize the creation of our reference files, we will use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TykeKIL91b"},{"type":"inlineCode","value":"Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M61xA4Mh87"},{"type":"text","value":". For a detailed guide on how to use Dask and Kerchunk, see the Foundations notebook: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"M7uvAaZSg3"},{"type":"link","url":"../foundations/kerchunk_dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Kerchunk and Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eIW6Oin56T"}],"urlSource":"../foundations/kerchunk_dask","key":"AqZ9mqnuab"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"l4nyKEK2Ug"}],"key":"MwT3bheS63"}],"key":"CgzW0IZCwa"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client = Client(n_workers=8, silence_logs=logging.ERROR)\nclient","key":"beOMTRkxjO"},{"type":"output","id":"pNylcA_eLJmulfXsjY4d3","data":[],"key":"szNcxT3lrf"}],"key":"UmY9yGrzjK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Iterate through list of files and create ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"w8LFzHCA8P"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PgDHh8NnwD"},{"type":"text","value":" indices as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jfgtfk44HD"},{"type":"inlineCode","value":".json","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AASVjLGizi"},{"type":"text","value":" reference files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YZ9laSfDtM"}],"identifier":"iterate-through-list-of-files-and-create-kerchunk-indices-as-json-reference-files","label":"Iterate through list of files and create Kerchunk indices as .json reference files","html_id":"iterate-through-list-of-files-and-create-kerchunk-indices-as-json-reference-files","implicit":true,"key":"Zcy9T8guXj"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Each input GRIB2 file contains multiple “messages”, each a measure of some variable on a grid, but with grid dimensions not necessarily compatible with one-another. The filter we create in the first line selects only certain types of messages, and indicated that heightAboveGround will be a coordinate of interest.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"wTz3rlLjdR"}],"key":"tQG9zQj8VG"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We also write a separate JSON for each of the selected message, since these are the basic component data sets (see the loop over ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"M1g7i66F5A"},{"type":"inlineCode","value":"out","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EwtB4dV9O9"},{"type":"text","value":").","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"V7T4ideGNp"}],"key":"cdneQsbGH9"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Note","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"BeJ9yvblKn"}],"key":"kUT4YhQCSU"},{"type":"text","value":": ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qmMxiKeGtH"},{"type":"inlineCode","value":"scan_grib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Zb73McWGlq"},{"type":"text","value":" does not require a filter and will happily create a reference file for each available grib message. However when combining the grib messages using ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"BCQZL89WHr"},{"type":"inlineCode","value":"MultiZarrToZarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"VCfPPG9vZN"},{"type":"text","value":" it is necessary for the messages to share a coordinate system. Thus to make our lives easier and ensure all reference outputs from ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"lQGGw1VUWM"},{"type":"inlineCode","value":"scan_grib","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"h4IkKH2bka"},{"type":"text","value":" share a coordinate system we pass a filter argument.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"X9dQSFnw6o"}],"key":"ivc1NBDLou"}],"key":"tZm2xC3h5M"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"afilter = {\"typeOfLevel\": \"heightAboveGround\", \"level\": [2, 10]}\nso = {\"anon\": True}\n\n# We are creating a temporary directory to store the .json reference files\n# Alternately, you could write these to cloud storage.\ntd = TemporaryDirectory()\ntemp_dir = td.name\ntemp_dir","key":"EEchtXnq5m"},{"type":"output","id":"gP6xjWHmpnk-FZShKwm-P","data":[],"key":"lnLi6dWoI4"}],"key":"ALrq6JS8WK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def make_json_name(\n    file_url, message_number\n):  # create a unique name for each reference file\n    date = file_url.split(\"/\")[3].split(\".\")[1]\n    name = file_url.split(\"/\")[5].split(\".\")[1:3]\n    return f\"{temp_dir}/{date}_{name[0]}_{name[1]}_message{message_number}.json\"\n\n\ndef gen_json(file_url):\n    out = scan_grib(\n        file_url, storage_options=so, inline_threshold=100, filter=afilter\n    )  # create the reference using scan_grib\n    for i, message in enumerate(\n        out\n    ):  # scan_grib outputs a list containing one reference per grib message\n        out_file_name = make_json_name(file_url, i)  # get name\n        with open(out_file_name, \"w\") as f:\n            f.write(ujson.dumps(message))  # write to file\n\n\n# Generate Dask Delayed objects\ntasks = [dask.delayed(gen_json)(fil) for fil in files]","key":"xw9A6ls8Th"},{"type":"output","id":"95lUClWlrBnvw0OhecsNO","data":[],"key":"tKA02lqif5"}],"key":"Wd5JZ5BVRk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Start parallel processing\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\ndask.compute(tasks)","key":"yO71Q6vLAt"},{"type":"output","id":"G38QmvHYl-VTWSrtwTFhW","data":[],"key":"Hi5dMprKjP"}],"key":"qQV5TIfxRO"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Combine ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"HBy8dasHi6"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NShfTX8a4a"},{"type":"text","value":" reference ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GC0ZUGzekL"},{"type":"inlineCode","value":".json","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"n2fw8vHhqS"},{"type":"text","value":" files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"leUZMmZrOr"}],"identifier":"combine-kerchunk-reference-json-files","label":"Combine Kerchunk reference .json files","html_id":"combine-kerchunk-reference-json-files","implicit":true,"key":"DWbGi8rw9i"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"We know that four coordinates are identical for every one of our component datasets - they are not functions of valid_time.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X8oYcSxVD2"}],"key":"gDGBjOsUCY"}],"key":"YdSQUqmscO"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Create a list of reference json files\noutput_files = glob.glob(f\"{temp_dir}/*.json\")\n\n# Combine individual references into single consolidated reference\nmzz = MultiZarrToZarr(\n    output_files,\n    concat_dims=[\"valid_time\"],\n    identical_dims=[\"latitude\", \"longitude\", \"heightAboveGround\", \"step\"],\n)\nmulti_kerchunk = mzz.translate()","key":"Mccofdy65q"},{"type":"output","id":"14E-z86Sr1YFSrFLsxPI8","data":[],"key":"wVxD3oWplv"}],"key":"Ad48Huj55m"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Write combined ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qn9vHN65yG"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"alX8Rp2onf"},{"type":"text","value":" reference file to ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WwsKEphpdZ"},{"type":"inlineCode","value":".json","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U0btSXaSe4"}],"identifier":"write-combined-kerchunk-reference-file-to-json","label":"Write combined Kerchunk reference file to .json","html_id":"write-combined-kerchunk-reference-file-to-json","implicit":true,"key":"Tg0rWz8rSp"}],"key":"luZ8BsVBcK"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Write Kerchunk .json record\noutput_fname = \"HRRR_combined.json\"\nwith open(f\"{output_fname}\", \"wb\") as f:\n    f.write(ujson.dumps(multi_kerchunk).encode())","key":"YfXgHEQrbW"},{"type":"output","id":"CJMbS0GH7WY7WJFGLlR92","data":[],"key":"hyuGEAa0Tq"}],"key":"fiCf4Klaht"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Shut down the Dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"THQNpheKlK"}],"identifier":"shut-down-the-dask-cluster","label":"Shut down the Dask cluster","html_id":"shut-down-the-dask-cluster","implicit":true,"key":"meGEVjw6IH"}],"key":"WrHN7D0gOQ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client.shutdown()","key":"ftZoAz79iB"},{"type":"output","id":"XG7BLDMUY0vo2L3vC0HXN","data":[],"key":"YPlXkqBc3F"}],"key":"aTEEqxLVlk"}],"key":"CE8K2EQh5T"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"NetCDF","url":"/notebooks/generating-references/netcdf","group":"Generating Reference Files"},"next":{"title":"GeoTIFF","url":"/notebooks/generating-references/geotiff","group":"Generating Reference Files"}}},"domain":"http://localhost:3000"}
{"version":2,"kind":"Notebook","sha256":"701b929d406092b26b4ca3623dbf34b5b751bfa46fd8be85eb54aa9e00735184","slug":"notebooks.foundations.kerchunk-multi-file","location":"/notebooks/foundations/02_kerchunk_multi_file.ipynb","dependencies":[],"frontmatter":{"title":"Multi-file virtual datasets with VirtualiZarr","content_includes_title":true,"kernelspec":{"name":"python3","display_name":"kerchunk-cookbook","language":"python"},"authors":[{"nameParsed":{"literal":"Norland Raphael Hagen","given":"Norland Raphael","family":"Hagen"},"name":"Norland Raphael Hagen","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/kerchunk-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/kerchunk-cookbook/blob/main/notebooks/foundations/02_kerchunk_multi_file.ipynb","thumbnail":"/kerchunk-cookbook/build/thumbnail-d855bdd5154678513f1da55abc815087.png","exports":[{"format":"ipynb","filename":"02_kerchunk_multi_file.ipynb","url":"/kerchunk-cookbook/build/02_kerchunk_multi_fi-02973249ff72f79d2e0e7d83a39a4fa9.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/kerchunk-cookbook/build/thumbnail-d855bdd5154678513f1da55abc815087.png","alt":"Kerchunk Logo","width":500,"key":"CJBEo6ZQGA","urlSource":"../../thumbnail.png"}],"key":"GasoEOkueN"}],"key":"TYR1RvSudn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":1,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Multi-file virtual datasets with VirtualiZarr","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Etkb1tV5TI"}],"identifier":"multi-file-virtual-datasets-with-virtualizarr","label":"Multi-file virtual datasets with VirtualiZarr","html_id":"multi-file-virtual-datasets-with-virtualizarr","implicit":true,"key":"mBLAfkYReZ"}],"key":"D16byoueaH"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dXPueIJrUo"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"UXqiTeTG57"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook is intends to build off of the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"rJIE51FoNG"},{"type":"link","url":"/notebooks/foundations/kerchunk-basics","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Basics of virtual Zarr stores","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K0x5qTtdES"}],"urlSource":"./01_kerchunk_basics.ipynb","dataUrl":"/notebooks.foundations.kerchunk-basics.json","internal":true,"protocol":"file","key":"JfYdvjZv5B"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gtKhKDjnUi"}],"key":"LmPOWrAi0Y"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"In this tutorial we will:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Wpw2JoSmRy"}],"key":"C7emyzL2re"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":6,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Create a list of input paths for a collection of NetCDF files stored on the cloud.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"jlEYYaddwQ"}],"key":"amWJCN6tEn"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Create virtual datasets for each input datasets","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"CaHftzeN7r"}],"key":"Tf6qkXbCTi"},{"type":"listItem","spread":true,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Combine the virtual datasets using combine_nested","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"dN9k0BmbGu"}],"key":"LxrsP1JEPs"},{"type":"listItem","spread":true,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Read the combined dataset using ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"F1WS7pYJ6v"},{"type":"link","url":"https://docs.xarray.dev/en/stable/","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"inlineCode","value":"Xarray","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"T3k6GWL1Ju"}],"urlSource":"https://docs.xarray.dev/en/stable/","key":"JCSnZ4eqy1"},{"type":"text","value":" and ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"dWrVJKV5d0"},{"type":"link","url":"https://filesystem-spec.readthedocs.io/en/latest/","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"inlineCode","value":"fsspec","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Y3qAhZO3ty"}],"urlSource":"https://filesystem-spec.readthedocs.io/en/latest/","key":"Nj11MpoJn9"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"yNWvcQ5Nmv"}],"key":"xYIBI2bXMy"}],"key":"l7HsXkm5p0"}],"key":"ZxRhWrdFXg"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"U5ENEpDT6S"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"HZAM1xGiWp"},{"type":"table","position":{"start":{"line":2,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"UGL4pJmDAR"}],"key":"pfYKdPxIVu"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"keOmXNeKKJ"}],"key":"larZ6PQZQz"},{"type":"tableCell","header":true,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dWt8B69iEF"}],"key":"pNtywZnaTX"}],"key":"q1k3QtYwOx"},{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/kerchunk-basics","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Basics of virtual Zarr stores","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"shoq5CVavn"}],"urlSource":"./01_kerchunk_basics.ipynb","dataUrl":"/notebooks.foundations.kerchunk-basics.json","internal":true,"protocol":"file","key":"UcNLZKuOO1"}],"key":"zy9CTsZaKI"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"UZwqf1spMq"}],"key":"GnmVAIkYsu"},{"type":"tableCell","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Basic features","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"DEMSHte0QB"}],"key":"P8hGk1gABI"}],"key":"DEREhuPBuv"},{"type":"tableRow","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Introduction to Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"jNmXqb8Ntd"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","key":"BwHWBc3Pei"}],"key":"UUYDxzXxLr"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Recommended","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"gMFSUutfEF"}],"key":"chx7oytIvn"},{"type":"tableCell","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"IO","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NaJ6yknLSK"}],"key":"opk5T8kt4L"}],"key":"Vq1seCNakh"}],"key":"cWW5oIiMZT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"strong","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jSMsNnLF6F"}],"key":"hJy4LNouiO"},{"type":"text","value":": 60 minutes","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"jgP2ZyexlC"}],"key":"pvUo9vu8sa"}],"key":"BsajAuTIYZ"},{"type":"thematicBreak","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"rCpm6ka419"}],"key":"y0Q3JKWOdP"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Flags","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"eONATny4qy"}],"identifier":"flags","label":"Flags","html_id":"flags","implicit":true,"key":"vY33kIStnd"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In the section below, set the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dGfipqIJ1R"},{"type":"inlineCode","value":"subset","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"cxptAcqz0z"},{"type":"text","value":" flag to be ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vHjJLNcdOk"},{"type":"inlineCode","value":"True","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IIGLAiYi9U"},{"type":"text","value":" (default) or ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"X9J5ahCf3v"},{"type":"inlineCode","value":"False","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ixCyByWhE8"},{"type":"text","value":" depending if you want this notebook to process the full file list. If set to ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"V6Tr4xXmrJ"},{"type":"inlineCode","value":"True","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"a8M0nSObdv"},{"type":"text","value":", then a subset of the file list will be processed (Recommended)","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"goXsE7Q8i7"}],"key":"j32KWz04Vz"}],"key":"CSl2DXcF3A"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"subset_flag = True","key":"uQjpt5gcPZ"},{"type":"output","id":"teY2Gm1SZIxl-204pKyqb","data":[],"key":"a7g4uz9z11"}],"key":"DzRGkDuWUJ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XxMywQLNXE"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"fPl1mHPFnU"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In our imports block we are using similar imports to the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"QOZeJ3w6po"},{"type":"link","url":"/notebooks/foundations/kerchunk-basics","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Basics of virtual Zarr stores tutorial","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YsGEDDEGjH"}],"urlSource":"./01_kerchunk_basics.ipynb","dataUrl":"/notebooks.foundations.kerchunk-basics.json","internal":true,"protocol":"file","key":"htRenkrNLJ"},{"type":"text","value":":","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"L7JOH4MOvv"}],"key":"j1ArZPHTxj"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"fsspec","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IxS06N9fb0"},{"type":"text","value":" for reading and writing to remote file systems","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kXxNjZaqwd"}],"key":"CWP7uZvSAR"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"virtualizarr","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"vyh4s0sdLe"},{"type":"text","value":" will be used to generate the virtual Zarr store","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"riAVwkVrnL"}],"key":"QcYOiYdGHx"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"inlineCode","value":"Xarray","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"MvgFgrVy24"},{"type":"text","value":" for examining the output dataset","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"BQTKi5UYWU"}],"key":"vGkOi1jBbO"}],"key":"KsEhHoSfTx"}],"key":"uKUeDG42fq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import fsspec\nimport xarray as xr\nfrom virtualizarr import open_virtual_dataset","key":"bkCtNAOnZ4"},{"type":"output","id":"TseeTWzqSGvx7saPYjlNL","data":[],"key":"UsxDhYla93"}],"key":"hhWdTG2ObD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create a File Pattern from a list of  input NetCDF files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"DsmAW0Mble"}],"identifier":"create-a-file-pattern-from-a-list-of-input-netcdf-files","label":"Create a File Pattern from a list of  input NetCDF files","html_id":"create-a-file-pattern-from-a-list-of-input-netcdf-files","implicit":true,"key":"qQFH5aIHBg"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Below we will create a list of input files we want to virtualize. In the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Rn8AgedvWe"},{"type":"link","url":"/notebooks/foundations/kerchunk-basics","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Basics of virtual Zarr stores tutorial","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zlCAs7c4fV"}],"urlSource":"./01_kerchunk_basics.ipynb","dataUrl":"/notebooks.foundations.kerchunk-basics.json","internal":true,"protocol":"file","key":"zrL5KmTfTu"},{"type":"text","value":", we looked at a single file of climate downscaled data over Southern Alaska. In this example, we will build off of that work and use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eL45RbKgKX"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MUADVtqchL"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QIGmb59E7j"},{"type":"inlineCode","value":"VirtualiZarr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"WTu0baLSrH"},{"type":"text","value":" to combine multiple NetCDF files of this dataset into a virtual dataset that can be read as if it were a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Of7whSUmBV"},{"type":"inlineCode","value":"Zarr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"TCqroxVCjm"},{"type":"text","value":" store - without copying any data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"w8aWTlKoNR"}],"key":"ji1s2D18xK"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"We use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"dlwwGRrNhi"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"rX3mKkQNam"},{"type":"text","value":" ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"IriaB3JR9t"},{"type":"inlineCode","value":"s3","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"V9X9qxCs5u"},{"type":"text","value":" filesystem’s ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ntCLM83RaC"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"glob","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"mxQCkfOQ5N"}],"key":"CXrKwxSvyq"},{"type":"text","value":" method to create a list of files matching a file pattern. We supply the base url of ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"xza7J8DZ9S"},{"type":"inlineCode","value":"s3://wrf-se-ak-ar5/ccsm/rcp85/daily/2060/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cKQ1QgkPZp"},{"type":"text","value":", which is pointing to an ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Y8PW58gzX6"},{"type":"inlineCode","value":"AWS","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"GF69LiX9N3"},{"type":"text","value":" public bucket, for daily rcp85 ccsm downscaled data for the year 2060. After this base url, we tacked on ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fy42EQVB85"},{"type":"emphasis","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"*","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"EmPhJakJAE"}],"key":"jG42JwKh2a"},{"type":"text","value":", which acts as a wildcard for all the files in the directory. We should expect 365 daily ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"NGyp9TMqcS"},{"type":"inlineCode","value":"NetCDF","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"cztLZjjvDM"},{"type":"text","value":" files.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"F4tCTHJstE"}],"key":"JF8yap5Qci"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"Finally, we are appending the string ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tj28w3pJSj"},{"type":"inlineCode","value":"s3://","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"U2Qx1qCHGc"},{"type":"text","value":" to the list of return files. This will ensure the list of files we get back are ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"V7SFcLzrSz"},{"type":"inlineCode","value":"s3","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ewyJOSD2yh"},{"type":"text","value":" urls and can be read by ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"tC58fklwZR"},{"type":"inlineCode","value":"VirtualiZarr","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JYLTttBlaF"},{"type":"text","value":" and ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FmKqejjxnu"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"TYmMNvRc0b"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"Vj4yNRlmPc"}],"key":"LibuAOC8B1"}],"key":"I34SjrOWW2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initiate fsspec filesystems for reading and writing\nfs_read = fsspec.filesystem(\"s3\", anon=True, skip_instance_cache=True)\n\n# Retrieve list of available days in archive for the year 2060.\nfiles_paths = fs_read.glob(\"s3://wrf-se-ak-ar5/ccsm/rcp85/daily/2060/*\")\n\n# Here we prepend the prefix 's3://', which points to AWS.\nfiles_paths = sorted([\"s3://\" + f for f in files_paths])","key":"X2NzB9InW0"},{"type":"output","id":"A8K5cNPn0cq3r2ZmwSZ_Y","data":[],"key":"RsOS2SlvgC"}],"key":"mJsa6V4Jkk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As a quick check, it looks like we have a list 365 file paths, which should be a year of downscaled climte data.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pkvLEm3BtC"}],"identifier":"as-a-quick-check-it-looks-like-we-have-a-list-365-file-paths-which-should-be-a-year-of-downscaled-climte-data","label":"As a quick check, it looks like we have a list 365 file paths, which should be a year of downscaled climte data.","html_id":"as-a-quick-check-it-looks-like-we-have-a-list-365-file-paths-which-should-be-a-year-of-downscaled-climte-data","implicit":true,"key":"WKCQn43jrv"}],"key":"yHiZP6NKJn"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"print(f\"{len(files_paths)} file paths were retrieved.\")","key":"csnRjWESWF"},{"type":"output","id":"G7vVWzWDJ6XHTL7L-ZAmX","data":[{"output_type":"stream","name":"stdout","text":"365 file paths were retrieved.\n"}],"key":"vhu3Uy4Xfi"}],"key":"vAiHktpikl"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# If the subset_flag == True (default), the list of input files will\n# be subset to speed up the processing\nif subset_flag:\n    files_paths = files_paths[0:4]","key":"aPuy6z7jG2"},{"type":"output","id":"diZ-ZQiwcA3WpgUMaonoA","data":[],"key":"jwNrbArcrc"}],"key":"is9aiQheXx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Optional: If you want to examine one NetCDF files before creating the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"wTzi4EOY3Y"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uTncieNoZo"},{"type":"text","value":" index, try uncommenting this code snippet below.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yk4FgnUtp8"}],"identifier":"optional-if-you-want-to-examine-one-netcdf-files-before-creating-the-kerchunk-index-try-uncommenting-this-code-snippet-below","label":"Optional: If you want to examine one NetCDF files before creating the Kerchunk index, try uncommenting this code snippet below.","html_id":"optional-if-you-want-to-examine-one-netcdf-files-before-creating-the-kerchunk-index-try-uncommenting-this-code-snippet-below","implicit":true,"key":"jbLHzVvFcc"}],"key":"Q1LUl83dUs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"## Note: Optional piece of code to view one of the NetCDFs\n\n# import s3fs\n\n# fs = fsspec.filesystem(\"s3\",anon=True)\n# ds = xr.open_dataset(fs.open(file_pattern[0]))","key":"R8EX7F8pNZ"},{"type":"output","id":"A3dMZ3FF4Tu6rkppz-pVt","data":[],"key":"oRLVfH7kol"}],"key":"Xc1V3bxnmn"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create virtual datasets for every file in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YSBo087a2z"},{"type":"inlineCode","value":"File_Pattern","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"TAhGjhKA8O"},{"type":"text","value":" list","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JFzBBGP0tj"}],"identifier":"create-virtual-datasets-for-every-file-in-the-file-pattern-list","label":"Create virtual datasets for every file in the File_Pattern list","html_id":"create-virtual-datasets-for-every-file-in-the-file-pattern-list","implicit":true,"key":"erJcNS3MTt"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that we have a list of NetCDF files, we can use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"OZHAvozIQR"},{"type":"inlineCode","value":"VirtualiZarr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ztCIIhT7lJ"},{"type":"text","value":" to create virtual datasets for each one of these.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"HOyKDGKY62"}],"key":"VJybzVqfxo"}],"key":"WkfeWa4yG7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Define kwargs for ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GHLLJ7tS3F"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"iwMeVy5c6a"}],"identifier":"define-kwargs-for-fsspec","label":"Define kwargs for fsspec","html_id":"define-kwargs-for-fsspec","implicit":true,"key":"dF24Rgwxsl"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In the cell below, we are creating a dictionary of ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"nFvQvWNrIk"},{"type":"inlineCode","value":"kwargs","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"yj9XgfXoI7"},{"type":"text","value":" to pass to ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aGb4B6UA41"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pvVi3j9YDe"},{"type":"text","value":" and the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ZkfpglCIji"},{"type":"inlineCode","value":"s3","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"HZ7x9R74Cp"},{"type":"text","value":" filesystem. Details on this can be found in the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"fGrAEhfj7y"},{"type":"link","url":"/notebooks/foundations/kerchunk-basics","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Basics of virtual Zarr stores tutorial","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"I4qKSPPFYL"}],"urlSource":"./01_kerchunk_basics.ipynb","dataUrl":"/notebooks.foundations.kerchunk-basics.json","internal":true,"protocol":"file","key":"XT1HyE4BOB"},{"type":"text","value":" in the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"vOXc9B1Hue"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Define storage_options arguments","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"mY8TAAqsJm"}],"key":"l0BVlGKgdW"},{"type":"text","value":" section","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dMoOJUSIvr"}],"key":"rcWNGbtLpX"}],"key":"dc9yrv2wll"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"storage_options = dict(anon=True, default_fill_cache=False, default_cache_type=\"none\")","key":"ej9BqVjyA8"},{"type":"output","id":"w8GcRCNKmR-VWLj7q1U8P","data":[],"key":"Ylzc2CfDlY"}],"key":"koijM8fpcl"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the cell below, we are reusing some of the functionality from the previous tutorial.\nFirst we are defining a function named: ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tmN8HHwxz7"},{"type":"inlineCode","value":"generate_json_reference","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JIryaohPMu"},{"type":"text","value":".\nThis function:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XcV5Im0cID"}],"key":"UEqOpJ3neT"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":4,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Uses an ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"IOCQEQ5EYo"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"MxUbPPX5cD"},{"type":"text","value":" ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"wxuqRBh8Qd"},{"type":"inlineCode","value":"s3","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"nxjF64jToP"},{"type":"text","value":" filesystem to read in a ","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"qPj31jrxT8"},{"type":"inlineCode","value":"NetCDF","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"f4IriZK2gL"},{"type":"text","value":" from a given url.","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uvTBxoFOTv"}],"key":"p8fNqUNkbz"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Generates a ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"OyFYFaYh8p"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"zYkGJZ1PS3"},{"type":"text","value":" index using the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"n7HXUbIBui"},{"type":"inlineCode","value":"SingleHdf5ToZarr","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RKewQG5XIa"},{"type":"text","value":" ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ewL6PuLyhO"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"WBrr9wQIHw"},{"type":"text","value":" method.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"KRVhIKDerj"}],"key":"qQG8NBtZmS"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Creates a simplified filename using some string slicing.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"iCXDIEdnl9"}],"key":"EKkp2ybxIu"},{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Uses the local filesystem created with ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"aALuYpfeXY"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"gpfIzxcNkJ"},{"type":"text","value":" to write the ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"x1MkfTw1tg"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"mHYBdObLG6"},{"type":"text","value":" index to a ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"FWnWGISaOA"},{"type":"inlineCode","value":".json","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"JHZ4yxj3mG"},{"type":"text","value":" reference file.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WQb6hZe9eY"}],"key":"Z8HxsVW52Z"}],"key":"ow4MvksLyt"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Below the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"wy7k74YQX3"},{"type":"inlineCode","value":"generate_json_reference","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"p8OtDtfID8"},{"type":"text","value":" function we created, we have a simple ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"SaP9OW3Uyw"},{"type":"inlineCode","value":"for","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"etRPz2XZmM"},{"type":"text","value":" loop that iterates through our list of ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"zxYSB6C5cv"},{"type":"inlineCode","value":"NetCDF","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Zt3Fh3wSEV"},{"type":"text","value":" file urls and passes them to our ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ATIgxq4Atj"},{"type":"inlineCode","value":"generate_json_reference","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"qvpoOH3M4v"},{"type":"text","value":" function, which appends the name of each ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"CFVNwAUxgW"},{"type":"inlineCode","value":".json","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"YQlQYSlkll"},{"type":"text","value":" reference file to a list named ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"lBq6y3qlaF"},{"type":"strong","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"output_files","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"HHv570tibe"}],"key":"C1gy1WscJk"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"DA5OpoxueD"}],"key":"c1VYjO35P2"}],"key":"xSvpxreiJF"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"virtual_datasets = [\n    open_virtual_dataset(\n        filepath, indexes={}, reader_options={\"storage_options\": storage_options}\n    )\n    for filepath in files_paths\n]","key":"OloNQ40ELL"},{"type":"output","id":"kjHDQa0PF9jMIyYy5o9uX","data":[],"key":"vUIEV7JCJz"}],"key":"pBb8Xeb3nX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Combine virtual datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GoG7nCQAGm"}],"identifier":"combine-virtual-datasets","label":"Combine virtual datasets","html_id":"combine-virtual-datasets","implicit":true,"key":"wEcWctwqPL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"After we have generated a virtual dataset for each ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sp3dCW1O2o"},{"type":"inlineCode","value":"NetCDF","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xAquzQukW7"},{"type":"text","value":" file, we can combine these into a single virtual dataset using Xarray’s ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"dPGjquhmXj"},{"type":"inlineCode","value":"combine_nested","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ce2NDoG2Ac"},{"type":"text","value":" function.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jkFhey3kyA"}],"key":"JgVyrlyw9i"}],"key":"jT4hlghjx6"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"combined_vds = xr.combine_nested(\n    virtual_datasets, concat_dim=[\"Time\"], coords=\"minimal\", compat=\"override\"\n)\ncombined_vds","key":"y4wmicKucr"},{"type":"output","id":"sg0ybUwzySwfYI_Vm9lMU","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mNotImplementedError\u001b[39m                       Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[9]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m combined_vds = \u001b[43mxr\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcombine_nested\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m      2\u001b[39m \u001b[43m    \u001b[49m\u001b[43mvirtual_datasets\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mconcat_dim\u001b[49m\u001b[43m=\u001b[49m\u001b[43m[\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mTime\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mminimal\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43moverride\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\n\u001b[32m      3\u001b[39m \u001b[43m)\u001b[49m\n\u001b[32m      4\u001b[39m combined_vds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/combine.py:588\u001b[39m, in \u001b[36mcombine_nested\u001b[39m\u001b[34m(datasets, concat_dim, compat, data_vars, coords, fill_value, join, combine_attrs)\u001b[39m\n\u001b[32m    585\u001b[39m     concat_dim = [concat_dim]\n\u001b[32m    587\u001b[39m \u001b[38;5;66;03m# The IDs argument tells _nested_combine that datasets aren't yet sorted\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m588\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_nested_combine\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    589\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdatasets\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    590\u001b[39m \u001b[43m    \u001b[49m\u001b[43mconcat_dims\u001b[49m\u001b[43m=\u001b[49m\u001b[43mconcat_dim\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    591\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    592\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    593\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    594\u001b[39m \u001b[43m    \u001b[49m\u001b[43mids\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43;01mFalse\u001b[39;49;00m\u001b[43m,\u001b[49m\n\u001b[32m    595\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    596\u001b[39m \u001b[43m    \u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m=\u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    597\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    598\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/combine.py:367\u001b[39m, in \u001b[36m_nested_combine\u001b[39m\u001b[34m(datasets, concat_dims, compat, data_vars, coords, ids, fill_value, join, combine_attrs)\u001b[39m\n\u001b[32m    364\u001b[39m _check_shape_tile_ids(combined_ids)\n\u001b[32m    366\u001b[39m \u001b[38;5;66;03m# Apply series of concatenate or merge operations along each dimension\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m367\u001b[39m combined = \u001b[43m_combine_nd\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    368\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcombined_ids\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    369\u001b[39m \u001b[43m    \u001b[49m\u001b[43mconcat_dims\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    370\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    371\u001b[39m \u001b[43m    \u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    372\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    373\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    374\u001b[39m \u001b[43m    \u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m=\u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    375\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    376\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    377\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m combined\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/combine.py:246\u001b[39m, in \u001b[36m_combine_nd\u001b[39m\u001b[34m(combined_ids, concat_dims, data_vars, coords, compat, fill_value, join, combine_attrs)\u001b[39m\n\u001b[32m    242\u001b[39m \u001b[38;5;66;03m# Each iteration of this loop reduces the length of the tile_ids tuples\u001b[39;00m\n\u001b[32m    243\u001b[39m \u001b[38;5;66;03m# by one. It always combines along the first dimension, removing the first\u001b[39;00m\n\u001b[32m    244\u001b[39m \u001b[38;5;66;03m# element of the tuple\u001b[39;00m\n\u001b[32m    245\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m concat_dim \u001b[38;5;129;01min\u001b[39;00m concat_dims:\n\u001b[32m--> \u001b[39m\u001b[32m246\u001b[39m     combined_ids = \u001b[43m_combine_all_along_first_dim\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    247\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcombined_ids\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    248\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdim\u001b[49m\u001b[43m=\u001b[49m\u001b[43mconcat_dim\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    249\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    250\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    251\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    252\u001b[39m \u001b[43m        \u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    253\u001b[39m \u001b[43m        \u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m=\u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    254\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    255\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    256\u001b[39m (combined_ds,) = combined_ids.values()\n\u001b[32m    257\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m combined_ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/combine.py:278\u001b[39m, in \u001b[36m_combine_all_along_first_dim\u001b[39m\u001b[34m(combined_ids, dim, data_vars, coords, compat, fill_value, join, combine_attrs)\u001b[39m\n\u001b[32m    276\u001b[39m     combined_ids = \u001b[38;5;28mdict\u001b[39m(\u001b[38;5;28msorted\u001b[39m(group))\n\u001b[32m    277\u001b[39m     datasets = combined_ids.values()\n\u001b[32m--> \u001b[39m\u001b[32m278\u001b[39m     new_combined_ids[new_id] = \u001b[43m_combine_1d\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    279\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdatasets\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdim\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcombine_attrs\u001b[49m\n\u001b[32m    280\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    281\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m new_combined_ids\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/combine.py:301\u001b[39m, in \u001b[36m_combine_1d\u001b[39m\u001b[34m(datasets, concat_dim, compat, data_vars, coords, fill_value, join, combine_attrs)\u001b[39m\n\u001b[32m    299\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m concat_dim \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    300\u001b[39m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m301\u001b[39m         combined = \u001b[43mconcat\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    302\u001b[39m \u001b[43m            \u001b[49m\u001b[43mdatasets\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    303\u001b[39m \u001b[43m            \u001b[49m\u001b[43mdim\u001b[49m\u001b[43m=\u001b[49m\u001b[43mconcat_dim\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    304\u001b[39m \u001b[43m            \u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    305\u001b[39m \u001b[43m            \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    306\u001b[39m \u001b[43m            \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    307\u001b[39m \u001b[43m            \u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    308\u001b[39m \u001b[43m            \u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m=\u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    309\u001b[39m \u001b[43m            \u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    310\u001b[39m \u001b[43m        \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    311\u001b[39m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[32m    312\u001b[39m         \u001b[38;5;28;01mif\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mencountered unexpected variable\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mstr\u001b[39m(err):\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/concat.py:277\u001b[39m, in \u001b[36mconcat\u001b[39m\u001b[34m(objs, dim, data_vars, coords, compat, positions, fill_value, join, combine_attrs, create_index_for_new_dim)\u001b[39m\n\u001b[32m    264\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m _dataarray_concat(\n\u001b[32m    265\u001b[39m         objs,\n\u001b[32m    266\u001b[39m         dim=dim,\n\u001b[32m   (...)\u001b[39m\u001b[32m    274\u001b[39m         create_index_for_new_dim=create_index_for_new_dim,\n\u001b[32m    275\u001b[39m     )\n\u001b[32m    276\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(first_obj, Dataset):\n\u001b[32m--> \u001b[39m\u001b[32m277\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_dataset_concat\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    278\u001b[39m \u001b[43m        \u001b[49m\u001b[43mobjs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    279\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdim\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdim\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    280\u001b[39m \u001b[43m        \u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdata_vars\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    281\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcoords\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    282\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcompat\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    283\u001b[39m \u001b[43m        \u001b[49m\u001b[43mpositions\u001b[49m\u001b[43m=\u001b[49m\u001b[43mpositions\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    284\u001b[39m \u001b[43m        \u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfill_value\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    285\u001b[39m \u001b[43m        \u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m=\u001b[49m\u001b[43mjoin\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    286\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    287\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcreate_index_for_new_dim\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcreate_index_for_new_dim\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    288\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    289\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    290\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\n\u001b[32m    291\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mcan only concatenate xarray Dataset and DataArray \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    292\u001b[39m         \u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mobjects, got \u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mtype\u001b[39m(first_obj)\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m\"\u001b[39m\n\u001b[32m    293\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/concat.py:676\u001b[39m, in \u001b[36m_dataset_concat\u001b[39m\u001b[34m(datasets, dim, data_vars, coords, compat, positions, fill_value, join, combine_attrs, create_index_for_new_dim)\u001b[39m\n\u001b[32m    674\u001b[39m         result_vars[k] = v\n\u001b[32m    675\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m676\u001b[39m     combined_var = \u001b[43mconcat_vars\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    677\u001b[39m \u001b[43m        \u001b[49m\u001b[38;5;28;43mvars\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdim_name\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpositions\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcombine_attrs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcombine_attrs\u001b[49m\n\u001b[32m    678\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    679\u001b[39m     \u001b[38;5;66;03m# reindex if variable is not present in all datasets\u001b[39;00m\n\u001b[32m    680\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(variable_index) < concat_index_size:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/core/variable.py:3023\u001b[39m, in \u001b[36mconcat\u001b[39m\u001b[34m(variables, dim, positions, shortcut, combine_attrs)\u001b[39m\n\u001b[32m   2975\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mconcat\u001b[39m(\n\u001b[32m   2976\u001b[39m     variables,\n\u001b[32m   2977\u001b[39m     dim=\u001b[33m\"\u001b[39m\u001b[33mconcat_dim\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m   2980\u001b[39m     combine_attrs=\u001b[33m\"\u001b[39m\u001b[33moverride\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m   2981\u001b[39m ):\n\u001b[32m   2982\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"Concatenate variables along a new or existing dimension.\u001b[39;00m\n\u001b[32m   2983\u001b[39m \n\u001b[32m   2984\u001b[39m \u001b[33;03m    Parameters\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m   3021\u001b[39m \u001b[33;03m        along the given dimension.\u001b[39;00m\n\u001b[32m   3022\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m3023\u001b[39m     variables = \u001b[38;5;28;43mlist\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mvariables\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   3024\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mall\u001b[39m(\u001b[38;5;28misinstance\u001b[39m(v, IndexVariable) \u001b[38;5;28;01mfor\u001b[39;00m v \u001b[38;5;129;01min\u001b[39;00m variables):\n\u001b[32m   3025\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m IndexVariable.concat(variables, dim, positions, shortcut, combine_attrs)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/structure/concat.py:598\u001b[39m, in \u001b[36m_dataset_concat.<locals>.ensure_common_dims\u001b[39m\u001b[34m(vars, concat_dim_lengths)\u001b[39m\n\u001b[32m    596\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m var.dims != common_dims:\n\u001b[32m    597\u001b[39m     common_shape = \u001b[38;5;28mtuple\u001b[39m(dims_sizes.get(d, dim_len) \u001b[38;5;28;01mfor\u001b[39;00m d \u001b[38;5;129;01min\u001b[39;00m common_dims)\n\u001b[32m--> \u001b[39m\u001b[32m598\u001b[39m     var = \u001b[43mvar\u001b[49m\u001b[43m.\u001b[49m\u001b[43mset_dims\u001b[49m\u001b[43m(\u001b[49m\u001b[43mcommon_dims\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcommon_shape\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    599\u001b[39m \u001b[38;5;28;01myield\u001b[39;00m var\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/util/deprecation_helpers.py:143\u001b[39m, in \u001b[36mdeprecate_dims.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m    135\u001b[39m     emit_user_level_warning(\n\u001b[32m    136\u001b[39m         \u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mThe `\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mold_name\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m` argument has been renamed to `dim`, and will be removed \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    137\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33min the future. This renaming is taking place throughout xarray over the \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m   (...)\u001b[39m\u001b[32m    140\u001b[39m         \u001b[38;5;167;01mPendingDeprecationWarning\u001b[39;00m,\n\u001b[32m    141\u001b[39m     )\n\u001b[32m    142\u001b[39m     kwargs[\u001b[33m\"\u001b[39m\u001b[33mdim\u001b[39m\u001b[33m\"\u001b[39m] = kwargs.pop(old_name)\n\u001b[32m--> \u001b[39m\u001b[32m143\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/core/variable.py:1401\u001b[39m, in \u001b[36mVariable.set_dims\u001b[39m\u001b[34m(self, dim, shape)\u001b[39m\n\u001b[32m   1394\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m shape \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mall\u001b[39m(\n\u001b[32m   1395\u001b[39m     s == \u001b[32m1\u001b[39m \u001b[38;5;28;01mfor\u001b[39;00m s, e \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mzip\u001b[39m(shape, dim, strict=\u001b[38;5;28;01mTrue\u001b[39;00m) \u001b[38;5;28;01mif\u001b[39;00m e \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;129;01min\u001b[39;00m self_dims\n\u001b[32m   1396\u001b[39m ):\n\u001b[32m   1397\u001b[39m     \u001b[38;5;66;03m# \"Trivial\" broadcasting, i.e. simply inserting a new dimension\u001b[39;00m\n\u001b[32m   1398\u001b[39m     \u001b[38;5;66;03m# This is typically easier for duck arrays to implement\u001b[39;00m\n\u001b[32m   1399\u001b[39m     \u001b[38;5;66;03m# than the full \"broadcast_to\" semantics\u001b[39;00m\n\u001b[32m   1400\u001b[39m     indexer = (\u001b[38;5;28;01mNone\u001b[39;00m,) * (\u001b[38;5;28mlen\u001b[39m(expanded_dims) - \u001b[38;5;28mself\u001b[39m.ndim) + (...,)\n\u001b[32m-> \u001b[39m\u001b[32m1401\u001b[39m     expanded_data = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mdata\u001b[49m\u001b[43m[\u001b[49m\u001b[43mindexer\u001b[49m\u001b[43m]\u001b[49m\n\u001b[32m   1402\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:  \u001b[38;5;66;03m# elif shape is not None:\u001b[39;00m\n\u001b[32m   1403\u001b[39m     dims_map = \u001b[38;5;28mdict\u001b[39m(\u001b[38;5;28mzip\u001b[39m(dim, shape, strict=\u001b[38;5;28;01mTrue\u001b[39;00m))\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/virtualizarr/manifests/array.py:226\u001b[39m, in \u001b[36mManifestArray.__getitem__\u001b[39m\u001b[34m(self, key)\u001b[39m\n\u001b[32m    224\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\n\u001b[32m    225\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m226\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mNotImplementedError\u001b[39;00m(\u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mDoesn\u001b[39m\u001b[33m'\u001b[39m\u001b[33mt support slicing with \u001b[39m\u001b[38;5;132;01m{\u001b[39;00mindexer\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m\"\u001b[39m)\n\n\u001b[31mNotImplementedError\u001b[39m: Doesn't support slicing with (None, slice(None, None, None))","ename":"NotImplementedError","evalue":"Doesn't support slicing with (None, slice(None, None, None))"}],"key":"JYSkguaHya"}],"key":"PfmYIfe6Dt"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Write combined virtual dataset to a Kerchunk JSON for future use","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yp3BBQqEpu"}],"identifier":"write-combined-virtual-dataset-to-a-kerchunk-json-for-future-use","label":"Write combined virtual dataset to a Kerchunk JSON for future use","html_id":"write-combined-virtual-dataset-to-a-kerchunk-json-for-future-use","implicit":true,"key":"futbucBz6G"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"If we want to keep the combined reference information in memory as well as write the file to ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"A9DUfuBRS3"},{"type":"inlineCode","value":".json","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"VdcmsjY85b"},{"type":"text","value":", we can run the code snippet below.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"IQFhufoR6R"}],"key":"eKkqedEifO"}],"key":"HPynkDbPib"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Write kerchunk .json record\noutput_fname = \"combined_kerchunk.json\"\ncombined_vds.virtualize.to_kerchunk(output_fname, format=\"json\")","key":"sCHGOIty37"},{"type":"output","id":"Cm3gq1ob9LzJ1kizgCYBz","data":[],"key":"EhwaJT5Ao9"}],"key":"abK0WXjPz4"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Using the output","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"P0byIGa3Kh"}],"identifier":"using-the-output","label":"Using the output","html_id":"using-the-output","implicit":true,"key":"ES6Or2L9mE"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Now that we have built a virtual dataset using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"jLTgVtCFTa"},{"type":"inlineCode","value":"VirtualiZarr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p0AUrNNncT"},{"type":"text","value":" and ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"B043QhmiUH"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Ah8sJBLp0A"},{"type":"text","value":", we can read all of those original ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Hw1ked42fg"},{"type":"inlineCode","value":"NetCDF","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"j6UCfWXlG3"},{"type":"text","value":" files as if they were a single ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Lz9tTZYieO"},{"type":"inlineCode","value":"Zarr","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qT9M02U1M7"},{"type":"text","value":" dataset.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AxuRSMIwNM"}],"key":"oPSFNKX3QJ"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"**Since we saved the combined virtual dataset, this work doesn’t have to be repeated for anyone else to use this dataset. All they need is to pass the reference file storing the virtual dataset to ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"Y1mFqlsCrk"},{"type":"inlineCode","value":"Xarray","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"MD6UMSsAP1"},{"type":"text","value":" and it is as if they had a ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"L7Zt5jpuYx"},{"type":"inlineCode","value":"Zarr","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"lHKvBTLCCb"},{"type":"text","value":" dataset!","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eSX8ySbniq"}],"key":"MsTQEDgjCr"}],"key":"X6jA4RPeBs"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Open combined virtual dataset with Kerchunk","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rYUlzF3n1q"}],"identifier":"open-combined-virtual-dataset-with-kerchunk","label":"Open combined virtual dataset with Kerchunk","html_id":"open-combined-virtual-dataset-with-kerchunk","implicit":true,"key":"z3pvqTak27"}],"key":"lJBKSwezd9"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# We once again need to provide information for fsspec to access the remote file\nstorage_options = dict(\n    remote_protocol=\"s3\", remote_options=dict(anon=True), skip_instance_cache=True\n)\n# We will use the \"kerchunk\" engine in `xr.open_dataset` and pass the `storage_options` to the `kerchunk` engine through `backend_kwargs`\nds = xr.open_dataset(\n    output_fname,\n    engine=\"kerchunk\",\n    backend_kwargs={\"storage_options\": storage_options},\n)\nds","key":"COsK2nGhkb"},{"type":"output","id":"V8I4VVDitio7E1vQ-Xu60","data":[],"key":"uRiiP0AyRA"}],"key":"XX4D3IcOzT"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Plot a slice of the dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"voIWqjvMNM"}],"identifier":"plot-a-slice-of-the-dataset","label":"Plot a slice of the dataset","html_id":"plot-a-slice-of-the-dataset","implicit":true,"key":"R5GzKrUUun"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here we are using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lgqjRBNoqQ"},{"type":"inlineCode","value":"Xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gBN1IoJf3K"},{"type":"text","value":" to select a single time slice of the dataset and plot a map of snow cover over South East Alaska.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"Czewg0SIGk"}],"key":"Ytzeo0dPqY"}],"key":"t1hPaxJ8Vg"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ds.isel(Time=0).SNOW.plot()","key":"IiTc8NiPa8"},{"type":"output","id":"wCmTrBETjvH0S2vUet9Sp","data":[],"key":"YisNfo49t3"}],"key":"MkZCH028cv"}],"key":"SYskQ9FPKU"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Basics of virtual Zarr stores","url":"/notebooks/foundations/kerchunk-basics","group":"Foundations"},"next":{"title":"Parallel virtual dataset creation with VirtualiZarr, Kerchunk, and Dask","url":"/notebooks/foundations/kerchunk-dask","group":"Foundations"}}},"domain":"http://localhost:3000"}
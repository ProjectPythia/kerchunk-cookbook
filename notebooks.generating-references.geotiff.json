{"version":2,"kind":"Notebook","sha256":"a5a6656cad60f74d0711246cf4b64f7c40185e66f9bfb7a268d0f380bd235c17","slug":"notebooks.generating-references.geotiff","location":"/notebooks/generating_references/GeoTIFF.ipynb","dependencies":[],"frontmatter":{"title":"GeoTIFF","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"kerchunk-cookbook","language":"python"},"authors":[{"nameParsed":{"literal":"Norland Raphael Hagen","given":"Norland Raphael","family":"Hagen"},"name":"Norland Raphael Hagen","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/kerchunk-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/kerchunk-cookbook/blob/main/notebooks/generating_references/GeoTIFF.ipynb","thumbnail":"/kerchunk-cookbook/build/radar-984081b95f4b33181fb70c632e27a690.png","exports":[{"format":"ipynb","filename":"GeoTIFF.ipynb","url":"/kerchunk-cookbook/build/GeoTIFF-b1008d1e6cf0e1921491fe352b68d7cd.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Generating virutal datasets from GeoTiff files","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ipGZKLYHrI"}],"key":"ZNkP5FQ2Mj"}],"key":"afdE8mnWfd"},{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"image","url":"/kerchunk-cookbook/build/radar-984081b95f4b33181fb70c632e27a690.png","alt":"ARG","width":400,"key":"eLkOPL7GLy","urlSource":"../images/radar.png"}],"key":"IDwIh8FRpy"}],"key":"zjnoPbbZnK"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"pHNXm4WAjq"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"JGxCxjR7G6"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this tutorial we will cover:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vgIT8bZbLc"}],"key":"sE8vgQ8SK5"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":5,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"How to generate virtual datasets from GeoTIFFs.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"aqF72ut5i9"}],"key":"MZcKnP9gR6"},{"type":"listItem","spread":true,"position":{"start":{"line":6,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Combining virtual datasets.","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"mba74RKBSs"}],"key":"sOUQ6HhoFB"}],"key":"tuO9nQQ1DR"},{"type":"heading","depth":2,"position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"NN8HVxQWNk"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"eNHyDptYoa"},{"type":"table","position":{"start":{"line":10,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"V1XJn8LNID"}],"key":"CzQBycBsO9"},{"type":"tableCell","header":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"MRNaTZK4ix"}],"key":"Pou7jLAziI"},{"type":"tableCell","header":true,"position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":10,"column":1},"end":{"line":10,"column":1}},"key":"cXDcJ0zksk"}],"key":"QynbhXRDRm"}],"key":"h8qo83D3ch"},{"type":"tableRow","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/kerchunk-basics","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Basics of virtual Zarr stores","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"BwINMzNjYy"}],"urlSource":"../foundations/01_kerchunk_basics.ipynb","dataUrl":"/notebooks.foundations.kerchunk-basics.json","internal":true,"protocol":"file","key":"NVKMUQ7Nst"}],"key":"enpwtZxNi7"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"j0T7FpuyF9"}],"key":"xM6sCKWktP"},{"type":"tableCell","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"P4JLtr7o4y"}],"key":"uw93IhKzKt"}],"key":"VA6pBfrqiG"},{"type":"tableRow","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/kerchunk-multi-file","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Multi-file virtual datasets with VirtualiZarr","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"y0cn5jzWe0"}],"urlSource":"../foundations/02_kerchunk_multi_file.ipynb","dataUrl":"/notebooks.foundations.kerchunk-multi-file.json","internal":true,"protocol":"file","key":"OTW4zYcMR0"}],"key":"XfyGXnJQjB"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"Mji9EjnaO6"}],"key":"B2x8dNbMt5"},{"type":"tableCell","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"PMqnkzgOZx"}],"key":"xNXmTfxgEM"}],"key":"DBx2aecMoa"},{"type":"tableRow","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"link","url":"/notebooks/foundations/kerchunk-dask","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Parallel virtual dataset creation with VirtualiZarr, Kerchunk, and Dask","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"bdFB9js9V8"}],"urlSource":"../foundations/03_kerchunk_dask","dataUrl":"/notebooks.foundations.kerchunk-dask.json","internal":true,"protocol":"file","key":"PIQ38Ydzqo"}],"key":"Ulg7HXwxHF"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"IdcmaqOPFH"}],"key":"UwfiXaea0d"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"wBi0WlefEL"}],"key":"clXpDK8QuM"}],"key":"gGUEqM3ZY9"},{"type":"tableRow","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"link","url":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Introduction to Xarray","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"pDI8Pe8EbX"}],"urlSource":"https://foundations.projectpythia.org/core/xarray/xarray-intro.html","key":"oPllOzQbgO"}],"key":"hkhKAtwDQo"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"DheZ0zE4Bi"}],"key":"C5kCImAha6"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"IO/Visualization","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"EP0SXu0REq"}],"key":"GsK5xBlq9z"}],"key":"OiBGrkYolm"}],"key":"x979eWqqaf"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"strong","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"CgxZKXAi7J"}],"key":"ue5TRMFL6g"},{"type":"text","value":": 30 minutes","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"TPltueK9R3"}],"key":"vK4cEDiPIR"}],"key":"F87FvRBIdI"},{"type":"thematicBreak","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"MdxYKkUJII"}],"key":"XDhOzQYpkx"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"About the Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"mQawu5dzmd"}],"identifier":"about-the-dataset","label":"About the Dataset","html_id":"about-the-dataset","implicit":true,"key":"bcvAz4Yl9k"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The Finish Meterological Institute (FMI) Weather Radar Dataset is a collection of GeoTIFF files containing multiple radar specific variables, such as rainfall intensity, precipitation accumulation (in 1, 12 and 24 hour increments),  radar reflectivity, radial velocity, rain classification and the cloud top height. It is available through the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CuegLGENvR"},{"type":"link","url":"https://aws.amazon.com/marketplace/pp/prodview-koodet467asui?sr=0-19&ref_=beagle&applicationId=AWSMPContessa","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"AWS public data portal","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s2TI6FQYKK"}],"urlSource":"https://aws.amazon.com/marketplace/pp/prodview-koodet467asui?sr=0-19&ref_=beagle&applicationId=AWSMPContessa","key":"l8KPkqNAyY"},{"type":"text","value":" and is updated frequently.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"msy48r8UME"}],"key":"rnBbolJg4t"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"More details on this dataset can be found ","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"hBLRC1tanF"},{"type":"link","url":"https://en.ilmatieteenlaitos.fi/radar-data-on-aws-s3","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"here","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"R6xzLDte1r"}],"urlSource":"https://en.ilmatieteenlaitos.fi/radar-data-on-aws-s3","key":"gp0nIcpFxk"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"WsZBAQXxbC"}],"key":"zEsLLrocBO"}],"key":"aG3tpS4JmB"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import logging\nfrom datetime import datetime\n\nimport dask\nimport fsspec\nimport rioxarray\nimport s3fs\nimport xarray as xr\nfrom distributed import Client\nfrom virtualizarr import open_virtual_dataset","key":"eKtMiCbYy3"},{"type":"output","id":"FAUBcExNRA2-9_7xPGtPI","data":[],"key":"EwhkvGjz9N"}],"key":"ObMHO6NEvM"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Examining a Single GeoTIFF File","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"f1o1bKNBrY"}],"identifier":"examining-a-single-geotiff-file","label":"Examining a Single GeoTIFF File","html_id":"examining-a-single-geotiff-file","implicit":true,"key":"XK9sV8Gfyu"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Before we use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"egQ6sdznsu"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zHrUt1Orft"},{"type":"text","value":" to create indices for multiple files, we can load a single GeoTiff file to examine it.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"msK3fTEQTJ"}],"key":"jA27SNpVPA"}],"key":"RsBfzztdcs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# URL pointing to a single GeoTIFF file\nurl = \"s3://fmi-opendata-radar-geotiff/2023/07/01/FIN-ACRR-3067-1KM/202307010100_FIN-ACRR1H-3067-1KM.tif\"\n\n# Initialize a s3 filesystem\nfs = s3fs.S3FileSystem(anon=True)\n\nxds = rioxarray.open_rasterio(fs.open(url))","key":"BNO1kMzZHW"},{"type":"output","id":"gLAPp28HyR6FfYwl8fdmq","data":[{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mAttributeError\u001b[39m                            Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[2]\u001b[39m\u001b[32m, line 7\u001b[39m\n\u001b[32m      4\u001b[39m \u001b[38;5;66;03m# Initialize a s3 filesystem\u001b[39;00m\n\u001b[32m      5\u001b[39m fs = s3fs.S3FileSystem(anon=\u001b[38;5;28;01mTrue\u001b[39;00m)\n\u001b[32m----> \u001b[39m\u001b[32m7\u001b[39m xds = rioxarray.open_rasterio(\u001b[43mfs\u001b[49m\u001b[43m.\u001b[49m\u001b[43mopen\u001b[49m\u001b[43m(\u001b[49m\u001b[43murl\u001b[49m\u001b[43m)\u001b[49m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py:1338\u001b[39m, in \u001b[36mAbstractFileSystem.open\u001b[39m\u001b[34m(self, path, mode, block_size, cache_options, compression, **kwargs)\u001b[39m\n\u001b[32m   1336\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m   1337\u001b[39m     ac = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33mautocommit\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28mself\u001b[39m._intrans)\n\u001b[32m-> \u001b[39m\u001b[32m1338\u001b[39m     f = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_open\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m   1339\u001b[39m \u001b[43m        \u001b[49m\u001b[43mpath\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1340\u001b[39m \u001b[43m        \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m=\u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1341\u001b[39m \u001b[43m        \u001b[49m\u001b[43mblock_size\u001b[49m\u001b[43m=\u001b[49m\u001b[43mblock_size\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1342\u001b[39m \u001b[43m        \u001b[49m\u001b[43mautocommit\u001b[49m\u001b[43m=\u001b[49m\u001b[43mac\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1343\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcache_options\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcache_options\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1344\u001b[39m \u001b[43m        \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m   1345\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1346\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m compression \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m   1347\u001b[39m         \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mfsspec\u001b[39;00m\u001b[34;01m.\u001b[39;00m\u001b[34;01mcompression\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m compr\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:489\u001b[39m, in \u001b[36mS3FileSystem._open\u001b[39m\u001b[34m(self, path, mode, block_size, acl, version_id, fill_cache, cache_type, autocommit, requester_pays, **kwargs)\u001b[39m\n\u001b[32m    486\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m cache_type \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    487\u001b[39m     cache_type = \u001b[38;5;28mself\u001b[39m.default_cache_type\n\u001b[32m--> \u001b[39m\u001b[32m489\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mS3File\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m    490\u001b[39m \u001b[43m    \u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m    491\u001b[39m \u001b[43m    \u001b[49m\u001b[43mpath\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    492\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    493\u001b[39m \u001b[43m    \u001b[49m\u001b[43mblock_size\u001b[49m\u001b[43m=\u001b[49m\u001b[43mblock_size\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    494\u001b[39m \u001b[43m    \u001b[49m\u001b[43macl\u001b[49m\u001b[43m=\u001b[49m\u001b[43macl\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    495\u001b[39m \u001b[43m    \u001b[49m\u001b[43mversion_id\u001b[49m\u001b[43m=\u001b[49m\u001b[43mversion_id\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    496\u001b[39m \u001b[43m    \u001b[49m\u001b[43mfill_cache\u001b[49m\u001b[43m=\u001b[49m\u001b[43mfill_cache\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    497\u001b[39m \u001b[43m    \u001b[49m\u001b[43ms3_additional_kwargs\u001b[49m\u001b[43m=\u001b[49m\u001b[43mkw\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    498\u001b[39m \u001b[43m    \u001b[49m\u001b[43mcache_type\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcache_type\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    499\u001b[39m \u001b[43m    \u001b[49m\u001b[43mautocommit\u001b[49m\u001b[43m=\u001b[49m\u001b[43mautocommit\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    500\u001b[39m \u001b[43m    \u001b[49m\u001b[43mrequester_pays\u001b[49m\u001b[43m=\u001b[49m\u001b[43mrequester_pays\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m    501\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:1659\u001b[39m, in \u001b[36mS3File.__init__\u001b[39m\u001b[34m(self, s3, path, mode, block_size, acl, version_id, fill_cache, s3_additional_kwargs, autocommit, cache_type, requester_pays)\u001b[39m\n\u001b[32m   1657\u001b[39m         \u001b[38;5;28mself\u001b[39m.details = s3.info(path)\n\u001b[32m   1658\u001b[39m         \u001b[38;5;28mself\u001b[39m.version_id = \u001b[38;5;28mself\u001b[39m.details.get(\u001b[33m\"\u001b[39m\u001b[33mVersionId\u001b[39m\u001b[33m\"\u001b[39m)\n\u001b[32m-> \u001b[39m\u001b[32m1659\u001b[39m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[43m.\u001b[49m\u001b[34;43m__init__\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[32m   1660\u001b[39m \u001b[43m    \u001b[49m\u001b[43ms3\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mpath\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mblock_size\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mautocommit\u001b[49m\u001b[43m=\u001b[49m\u001b[43mautocommit\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcache_type\u001b[49m\u001b[43m=\u001b[49m\u001b[43mcache_type\u001b[49m\n\u001b[32m   1661\u001b[39m \u001b[43m\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1662\u001b[39m \u001b[38;5;28mself\u001b[39m.s3 = \u001b[38;5;28mself\u001b[39m.fs  \u001b[38;5;66;03m# compatibility\u001b[39;00m\n\u001b[32m   1664\u001b[39m \u001b[38;5;66;03m# when not using autocommit we want to have transactional state to manage\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py:1912\u001b[39m, in \u001b[36mAbstractBufferedFile.__init__\u001b[39m\u001b[34m(self, fs, path, mode, block_size, autocommit, cache_type, cache_options, size, **kwargs)\u001b[39m\n\u001b[32m   1910\u001b[39m         \u001b[38;5;28mself\u001b[39m.size = size\n\u001b[32m   1911\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m1912\u001b[39m         \u001b[38;5;28mself\u001b[39m.size = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mdetails\u001b[49m[\u001b[33m\"\u001b[39m\u001b[33msize\u001b[39m\u001b[33m\"\u001b[39m]\n\u001b[32m   1913\u001b[39m     \u001b[38;5;28mself\u001b[39m.cache = caches[cache_type](\n\u001b[32m   1914\u001b[39m         \u001b[38;5;28mself\u001b[39m.blocksize, \u001b[38;5;28mself\u001b[39m._fetch_range, \u001b[38;5;28mself\u001b[39m.size, **cache_options\n\u001b[32m   1915\u001b[39m     )\n\u001b[32m   1916\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py:1925\u001b[39m, in \u001b[36mAbstractBufferedFile.details\u001b[39m\u001b[34m(self)\u001b[39m\n\u001b[32m   1922\u001b[39m \u001b[38;5;129m@property\u001b[39m\n\u001b[32m   1923\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mdetails\u001b[39m(\u001b[38;5;28mself\u001b[39m):\n\u001b[32m   1924\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m._details \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m1925\u001b[39m         \u001b[38;5;28mself\u001b[39m._details = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mfs\u001b[49m\u001b[43m.\u001b[49m\u001b[43minfo\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mpath\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1926\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m._details\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:118\u001b[39m, in \u001b[36msync_wrapper.<locals>.wrapper\u001b[39m\u001b[34m(*args, **kwargs)\u001b[39m\n\u001b[32m    115\u001b[39m \u001b[38;5;129m@functools\u001b[39m.wraps(func)\n\u001b[32m    116\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mwrapper\u001b[39m(*args, **kwargs):\n\u001b[32m    117\u001b[39m     \u001b[38;5;28mself\u001b[39m = obj \u001b[38;5;129;01mor\u001b[39;00m args[\u001b[32m0\u001b[39m]\n\u001b[32m--> \u001b[39m\u001b[32m118\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43msync\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mloop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mfunc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:103\u001b[39m, in \u001b[36msync\u001b[39m\u001b[34m(loop, func, timeout, *args, **kwargs)\u001b[39m\n\u001b[32m    101\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m FSTimeoutError \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01mreturn_result\u001b[39;00m\n\u001b[32m    102\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(return_result, \u001b[38;5;167;01mBaseException\u001b[39;00m):\n\u001b[32m--> \u001b[39m\u001b[32m103\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m return_result\n\u001b[32m    104\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    105\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m return_result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/asyn.py:56\u001b[39m, in \u001b[36m_runner\u001b[39m\u001b[34m(event, coro, result, timeout)\u001b[39m\n\u001b[32m     54\u001b[39m     coro = asyncio.wait_for(coro, timeout=timeout)\n\u001b[32m     55\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m56\u001b[39m     result[\u001b[32m0\u001b[39m] = \u001b[38;5;28;01mawait\u001b[39;00m coro\n\u001b[32m     57\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\u001b[32m     58\u001b[39m     result[\u001b[32m0\u001b[39m] = ex\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:910\u001b[39m, in \u001b[36mS3FileSystem._info\u001b[39m\u001b[34m(self, path, bucket, key, refresh, version_id)\u001b[39m\n\u001b[32m    908\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m key:\n\u001b[32m    909\u001b[39m     \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m910\u001b[39m         out = \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._call_s3(\n\u001b[32m    911\u001b[39m             \u001b[33m\"\u001b[39m\u001b[33mhead_object\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m    912\u001b[39m             \u001b[38;5;28mself\u001b[39m.kwargs,\n\u001b[32m    913\u001b[39m             Bucket=bucket,\n\u001b[32m    914\u001b[39m             Key=key,\n\u001b[32m    915\u001b[39m             **version_id_kw(version_id),\n\u001b[32m    916\u001b[39m             **\u001b[38;5;28mself\u001b[39m.req_kw,\n\u001b[32m    917\u001b[39m         )\n\u001b[32m    918\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m {\n\u001b[32m    919\u001b[39m             \u001b[33m\"\u001b[39m\u001b[33mETag\u001b[39m\u001b[33m\"\u001b[39m: out[\u001b[33m\"\u001b[39m\u001b[33mETag\u001b[39m\u001b[33m\"\u001b[39m],\n\u001b[32m    920\u001b[39m             \u001b[33m\"\u001b[39m\u001b[33mKey\u001b[39m\u001b[33m\"\u001b[39m: \u001b[33m\"\u001b[39m\u001b[33m/\u001b[39m\u001b[33m\"\u001b[39m.join([bucket, key]),\n\u001b[32m   (...)\u001b[39m\u001b[32m    927\u001b[39m             \u001b[33m\"\u001b[39m\u001b[33mVersionId\u001b[39m\u001b[33m\"\u001b[39m: out.get(\u001b[33m\"\u001b[39m\u001b[33mVersionId\u001b[39m\u001b[33m\"\u001b[39m),\n\u001b[32m    928\u001b[39m         }\n\u001b[32m    929\u001b[39m     \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mFileNotFoundError\u001b[39;00m:\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:228\u001b[39m, in \u001b[36mS3FileSystem._call_s3\u001b[39m\u001b[34m(self, method, *akwarglist, **kwargs)\u001b[39m\n\u001b[32m    227\u001b[39m \u001b[38;5;28;01masync\u001b[39;00m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_call_s3\u001b[39m(\u001b[38;5;28mself\u001b[39m, method, *akwarglist, **kwargs):\n\u001b[32m--> \u001b[39m\u001b[32m228\u001b[39m     \u001b[38;5;28;01mawait\u001b[39;00m \u001b[38;5;28mself\u001b[39m._connect()\n\u001b[32m    229\u001b[39m     method = \u001b[38;5;28mgetattr\u001b[39m(\u001b[38;5;28mself\u001b[39m.s3, method)\n\u001b[32m    230\u001b[39m     kw2 = kwargs.copy()\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/s3fs/core.py:365\u001b[39m, in \u001b[36mS3FileSystem._connect\u001b[39m\u001b[34m(self, refresh, kwargs)\u001b[39m\n\u001b[32m    363\u001b[39m     config_kwargs[\u001b[33m\"\u001b[39m\u001b[33msignature_version\u001b[39m\u001b[33m\"\u001b[39m] = UNSIGNED\n\u001b[32m    364\u001b[39m conf = AioConfig(**config_kwargs)\n\u001b[32m--> \u001b[39m\u001b[32m365\u001b[39m \u001b[38;5;28mself\u001b[39m.session = \u001b[43maiobotocore\u001b[49m\u001b[43m.\u001b[49m\u001b[43mAioSession\u001b[49m(**\u001b[38;5;28mself\u001b[39m.kwargs)\n\u001b[32m    366\u001b[39m s3creator = \u001b[38;5;28mself\u001b[39m.session.create_client(\n\u001b[32m    367\u001b[39m     \u001b[33m\"\u001b[39m\u001b[33ms3\u001b[39m\u001b[33m\"\u001b[39m, config=conf, **init_kwargs, **client_kwargs\n\u001b[32m    368\u001b[39m )\n\u001b[32m    369\u001b[39m \u001b[38;5;28mself\u001b[39m._s3creator = s3creator\n\n\u001b[31mAttributeError\u001b[39m: module 'aiobotocore' has no attribute 'AioSession'","ename":"AttributeError","evalue":"module 'aiobotocore' has no attribute 'AioSession'"}],"key":"V1menCcvmA"}],"key":"OB6n479aeZ"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"xds","key":"fxPG8f5M8z"},{"type":"output","id":"h7CIEPe45vwMAn9LKz7CL","data":[],"key":"hOhECYplJJ"}],"key":"N60SnK8xhs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"xds.isel(band=0).where(xds < 2000).plot()","key":"f0sYBPftNg"},{"type":"output","id":"d2xyxacA2ptT9mXmzMixd","data":[],"key":"NtOHaiYciw"}],"key":"mJHnYLH53f"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Create Input File List","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oXZe8mKz4S"}],"identifier":"create-input-file-list","label":"Create Input File List","html_id":"create-input-file-list","implicit":true,"key":"PvLbfttrqZ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Here we are using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"UcRL9xLgwJ"},{"type":"inlineCode","value":"fsspec's","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"s1IXapNiKX"},{"type":"text","value":" glob functionality along with the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"zjLoZwXVLJ"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"*","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IBA4v0VTZF"}],"key":"cZu3NSEjiY"},{"type":"text","value":" wildcard operator and some string slicing to grab a list of GeoTIFF files from a ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oLqamZLQUh"},{"type":"inlineCode","value":"s3","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"fwB52FXuPH"},{"type":"text","value":" ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"em91uFJkfp"},{"type":"inlineCode","value":"fsspec","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"O8KauBzPZv"},{"type":"text","value":" filesystem.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oHK1eGhnca"}],"key":"oxivQef8VB"}],"key":"dqodJ8KPdk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Initiate fsspec filesystems for reading\nfs_read = fsspec.filesystem(\"s3\", anon=True, skip_instance_cache=True)\n\nfiles_paths = fs_read.glob(\n    \"s3://fmi-opendata-radar-geotiff/2023/01/01/FIN-ACRR-3067-1KM/*24H-3067-1KM.tif\"\n)\n# Here we prepend the prefix 's3://', which points to AWS.\nfiles_paths = sorted([\"s3://\" + f for f in files_paths])","key":"nJJaF6aRE6"},{"type":"output","id":"LL9d8C-ohrx3VHfyy6G6R","data":[],"key":"SNRC8Q96Q2"}],"key":"airAldiIpl"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Start a Dask Client","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"fJqTbr5avY"}],"identifier":"start-a-dask-client","label":"Start a Dask Client","html_id":"start-a-dask-client","implicit":true,"key":"wwG2Lwzp2w"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"To parallelize the creation of our reference files, we will use ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JkfDGyVBqx"},{"type":"inlineCode","value":"Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"LkvOvXDeYX"},{"type":"text","value":". For a detailed guide on how to use Dask and Kerchunk, see the Foundations notebook: ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"h16htnNE79"},{"type":"link","url":"../foundations/kerchunk_dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"Kerchunk and Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"q1dN0X1pIN"}],"urlSource":"../foundations/kerchunk_dask","key":"jmSxRuLfQ2"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AyFctEZI7T"}],"key":"vl5bZ4Xs2M"}],"key":"VFH8XMQdfU"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client = Client(n_workers=8, silence_logs=logging.ERROR)\nclient","key":"Ll9B2z7AfP"},{"type":"output","id":"-NN4IYJi14ixPKGwf3pCo","data":[],"key":"mzAQdXhIps"}],"key":"gmwKGuDrM2"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def generate_virtual_dataset(file):\n    storage_options = dict(\n        anon=True, default_fill_cache=False, default_cache_type=\"none\"\n    )\n    vds = open_virtual_dataset(\n        file,\n        indexes={},\n        filetype=\"tiff\",\n        reader_options={\n            \"remote_options\": {\"anon\": True},\n            \"storage_options\": storage_options,\n        },\n    )\n    # Pre-process virtual datasets to extract time step information from the filename\n    subst = file.split(\"/\")[-1].split(\".json\")[0].split(\"_\")[0]\n    time_val = datetime.strptime(subst, \"%Y%m%d%H%M\")\n    vds = vds.expand_dims(dim={\"time\": [time_val]})\n    # Only include the raw data, not the overviews\n    vds = vds[[\"0\"]]\n    return vds","key":"Y6N37RT84m"},{"type":"output","id":"zZew1rqymkpuWfeohGFOT","data":[],"key":"FX7xTdliWL"}],"key":"XMA7qJHNDb"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Generate Dask Delayed objects\ntasks = [dask.delayed(generate_virtual_dataset)(file) for file in files_paths]","key":"qxm9FcugPQ"},{"type":"output","id":"eBY-3u83ltTMucbi5uCoO","data":[],"key":"V1gcmkORZR"}],"key":"ggDFipwWsD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Start parallel processing\nimport warnings\n\nwarnings.filterwarnings(\"ignore\")\nvirtual_datasets = dask.compute(*tasks)","key":"sTJXnsl7Fz"},{"type":"output","id":"hKYN92Im_rPod51jwCjq_","data":[],"key":"CCAmOiXQdj"}],"key":"Pz9U3LxjsX"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Combine virtual datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LqIz1RKbp3"}],"identifier":"combine-virtual-datasets","label":"Combine virtual datasets","html_id":"combine-virtual-datasets","implicit":true,"key":"wxHTz76WPv"}],"key":"W2jW0PNCDs"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"combined_vds = xr.concat(virtual_datasets, dim=\"time\")\ncombined_vds","key":"RExEVkHVnl"},{"type":"output","id":"7rZxsqUo4_N1Q6BIDH-_R","data":[],"key":"EtFqODIX2P"}],"key":"mQ9r1WLCqY"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Shut down the Dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ILi7uiVUn4"}],"identifier":"shut-down-the-dask-cluster","label":"Shut down the Dask cluster","html_id":"shut-down-the-dask-cluster","implicit":true,"key":"P69kgeqH8D"}],"key":"LRMpzH0b2F"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client.shutdown()","key":"L03CwAJCMa"},{"type":"output","id":"XnXHylGPTXoA_uODVbcHM","data":[],"key":"BuL8kTxrCu"}],"key":"AYRgCU5pwV"}],"key":"QBHC1lJWpc"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"GRIB2","url":"/notebooks/generating-references/grib2","group":"Generating Reference Files"},"next":{"title":"Load Kerchunked dataset with Xarray","url":"/notebooks/using-references/xarray","group":"Using Pre-Generated References"}}},"domain":"http://localhost:3000"}
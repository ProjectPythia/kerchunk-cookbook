{"version":2,"kind":"Notebook","sha256":"5001a6b23bb0d4db678a64ed14a42abc0d2d878b645b75e32a991123ff7c5e49","slug":"notebooks.using-references.datatree","location":"/notebooks/using_references/Datatree.ipynb","dependencies":[],"frontmatter":{"title":"Kerchunk and Xarray-Datatree","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"authors":[{"nameParsed":{"literal":"Norland Raphael Hagen","given":"Norland Raphael","family":"Hagen"},"name":"Norland Raphael Hagen","id":"contributors-myst-generated-uid-0"}],"open_access":true,"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"Apache-2.0","url":"https://opensource.org/licenses/Apache-2.0","name":"Apache License 2.0","free":true,"osi":true}},"github":"https://github.com/projectpythia/kerchunk-cookbook","copyright":"2024","affiliations":[{"id":"UAlbany","name":"University at Albany (SUNY)","department":"Atmospheric and Environmental Sciences","url":"https://www.albany.edu/daes"},{"id":"CISL","name":"NSF National Center for Atmospheric Research","department":"Computational and Information Systems Lab","url":"https://www.cisl.ucar.edu"},{"id":"Unidata","name":"NSF Unidata","url":"https://www.unidata.ucar.edu"},{"id":"Argonne","name":"Argonne National Laboratory","department":"Environmental Science Division","url":"https://www.anl.gov/evs"},{"id":"CarbonPlan","name":"CarbonPlan","url":"https://carbonplan.org"},{"id":"NVIDIA","name":"NVIDIA Corporation","url":"https://www.nvidia.com/"}],"numbering":{"title":{"offset":1}},"edit_url":"https://github.com/projectpythia/kerchunk-cookbook/blob/main/notebooks/using_references/Datatree.ipynb","exports":[{"format":"ipynb","filename":"Datatree.ipynb","url":"/kerchunk-cookbook/build/Datatree-488db22ed20bc32894f6983f2c9d9018.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Overview","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"QMd5Z85xbF"}],"identifier":"overview","label":"Overview","html_id":"overview","implicit":true,"key":"CfLoaekGpL"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In this tutorial we are going to use a large collection of pre-generated ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"peemKAQR2f"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"VGIEjKUNi5"},{"type":"text","value":" reference files and open them with Xarrayâ€™s new ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"X0FvKybiPh"},{"type":"link","url":"https://docs.xarray.dev/en/stable/generated/xarray.DataTree.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"DataTree","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"mBwTXNliuU"}],"urlSource":"https://docs.xarray.dev/en/stable/generated/xarray.DataTree.html","key":"ZhXNhjyclo"},{"type":"text","value":" functionality. This chapter is heavily inspired by ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"p2veaawI1s"},{"type":"link","url":"https://medium.com/pangeo/easy-ipcc-part-1-multi-model-datatree-469b87cf9114","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"this blog post","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JQFFY63C7C"}],"urlSource":"https://medium.com/pangeo/easy-ipcc-part-1-multi-model-datatree-469b87cf9114","key":"dGNJeHK8HS"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"P1lq9CD8gm"}],"key":"LNeUwmXTOq"},{"type":"heading","depth":4,"position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"About the Dataset","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"hFlYb1Sf9v"}],"identifier":"about-the-dataset","label":"About the Dataset","html_id":"about-the-dataset","implicit":true,"key":"Og43UeRxZQ"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"This collection of reference files were generated from the ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"UHuNMzA0q9"},{"type":"link","url":"https://www.nccs.nasa.gov/services/data-collections/land-based-products/nex-gddp-cmip6","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"NASA NEX-GDDP-CMIP6 (Global Daily Downscaled Projections)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"IvCUvTG0Wf"}],"key":"eMkhMzUvz1"}],"urlSource":"https://www.nccs.nasa.gov/services/data-collections/land-based-products/nex-gddp-cmip6","key":"bBoAArrYtr"},{"type":"text","value":" dataset.  A version of this dataset is hosted on ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HWhej3n7Dk"},{"type":"inlineCode","value":"s3","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"ZxCh0WuuEg"},{"type":"text","value":" as a collection of ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"r6D9gVlrJZ"},{"type":"link","url":"https://registry.opendata.aws/nex-gddp-cmip6/","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"NetCDF files","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"Oc6zITT9LV"}],"urlSource":"https://registry.opendata.aws/nex-gddp-cmip6/","key":"bHgj4A89GC"},{"type":"text","value":".","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"QU0eqrf2Lr"}],"key":"QfGfAbq6Io"},{"type":"heading","depth":3,"position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Prerequisites","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"QTMPiDNtXM"}],"identifier":"prerequisites","label":"Prerequisites","html_id":"prerequisites","implicit":true,"key":"GorQLDd69J"},{"type":"table","position":{"start":{"line":12,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Concepts","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"d9wiTOLcXS"}],"key":"S8mRxqotUW"},{"type":"tableCell","header":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Importance","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"EaZMrCbdS3"}],"key":"aSYPB0Yz6M"},{"type":"tableCell","header":true,"position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"Notes","position":{"start":{"line":12,"column":1},"end":{"line":12,"column":1}},"key":"agmV3jRfUu"}],"key":"Ps66XMHxVB"}],"key":"UtkVQybFla"},{"type":"tableRow","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"link","url":"../foundations/kerchunk_basics","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Kerchunk Basics","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"TFtiNKGNbB"}],"urlSource":"../foundations/kerchunk_basics","key":"SWh1sdb2Fe"}],"key":"RRnHEmn0Ah"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"NLDjDmDYGW"}],"key":"VciqtUQ5X5"},{"type":"tableCell","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"NsyADNonlj"}],"key":"qyffm9rGUE"}],"key":"tKpXGWrBbg"},{"type":"tableRow","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"link","url":"../foundations/kerchunk_multi_file","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Multiple Files and Kerchunk","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"KHmGUvlRqo"}],"urlSource":"../foundations/kerchunk_multi_file","key":"ZvvaaAKJPP"}],"key":"WqRwCJOLhf"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ff4gydsotZ"}],"key":"pC52z7dYI6"},{"type":"tableCell","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mrOJUuOtSk"}],"key":"dJ6fEYh5v1"}],"key":"nTF32tpkrr"},{"type":"tableRow","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"link","url":"../foundations/kerchunk_dask","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Kerchunk and Dask","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"fZ2a0nfQp1"}],"urlSource":"../foundations/kerchunk_dask","key":"GOFY2OphuS"}],"key":"GiIF0ZPDSn"},{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"kfXid4FVOi"}],"key":"StVlTzpTnR"},{"type":"tableCell","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"children":[{"type":"text","value":"Core","position":{"start":{"line":16,"column":1},"end":{"line":16,"column":1}},"key":"RgPiT8vFhZ"}],"key":"RKyuWmeS82"}],"key":"Vi3r8SSWRR"},{"type":"tableRow","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"link","url":"../case_studies/ARG_Weather.ipynb","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Multi-File Datasets with Kerchunk","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"cNk6QE0Gcc"}],"urlSource":"../case_studies/ARG_Weather.ipynb","key":"dedWVBc9Ml"}],"key":"AuyoQYjOEq"},{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"qKlA5sDIVp"}],"key":"L2ry9W4tNk"},{"type":"tableCell","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"IO/Visualization","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"L1PeBpIFVc"}],"key":"VMZiCpzudc"}],"key":"haNNU1xcXs"},{"type":"tableRow","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"link","url":"https://xarray-datatree.readthedocs.io/en/latest/quick-overview.html","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Xarray-Datatree Overview","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"RCJtV7aRAI"}],"urlSource":"https://xarray-datatree.readthedocs.io/en/latest/quick-overview.html","key":"IofHNo0MwO"}],"key":"eGTssrBkjI"},{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"Required","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"u5Og8EwnlB"}],"key":"pSrGskVDL4"},{"type":"tableCell","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"children":[{"type":"text","value":"IO","position":{"start":{"line":18,"column":1},"end":{"line":18,"column":1}},"key":"D2wtDPBFJv"}],"key":"Eh8oxrjRXa"}],"key":"bDWIv8ldIm"}],"key":"fcJjGJmXFe"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"strong","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"children":[{"type":"text","value":"Time to learn","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"pCMy4XOkL2"}],"key":"rwmqojEWTk"},{"type":"text","value":": 30 minutes","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"W2m7974Q9O"}],"key":"h1w6t1hFVu"}],"key":"RKevNOt8Ji"},{"type":"heading","depth":3,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"Motivation","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"Wy2WdIqnqg"}],"identifier":"motivation","label":"Motivation","html_id":"motivation","implicit":true,"key":"n29N95AEQd"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"In total the dataset is roughly ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"BDfnW00coX"},{"type":"strong","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"12TB","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"G2m7Rsyfpz"}],"key":"hfSHqN1GZ6"},{"type":"text","value":" in compressed blob storage, with a single ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"AY6T0UsbYD"},{"type":"inlineCode","value":"NetCDF","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"QF8pPx3Pvt"},{"type":"text","value":" file per yearly timestep, per variable. Downloading this entire dataset for analysis on a local machine would difficult to say the least. The collection of ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"OdLMy7jmkN"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"bNKtuGK8Pa"},{"type":"text","value":" reference files for this entire dataset is only ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"op4BIBgjDj"},{"type":"strong","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"272 Mb","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"oqOCrJcBmq"}],"key":"j8pE7GUUbw"},{"type":"text","value":", which is about 42,000 times smaller!","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"IOnOWLBK1c"}],"key":"KRvru098Xy"}],"key":"tosoEeDQYk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Imports","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"zZ89dbRjds"}],"identifier":"imports","label":"Imports","html_id":"imports","implicit":true,"key":"Ul6JBWfGLf"}],"key":"nH33y2quiD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"import dask\nimport hvplot.xarray  # noqa\nimport pandas as pd\nimport xarray as xr\nfrom xarray import DataTree\nfrom distributed import Client\nfrom fsspec.implementations.reference import ReferenceFileSystem","key":"TJjtXUHI0u"},{"type":"output","id":"NliMsNk_aeOl_uonN2qAy","data":[{"output_type":"display_data","metadata":{},"data":{"text/html":{"content":"<script type=\"esms-options\">{\"shimMode\": true}</script><style>*[data-root-id],\n*[data-root-id] > * {\n  box-sizing: border-box;\n  font-family: var(--jp-ui-font-family);\n  font-size: var(--jp-ui-font-size1);\n  color: var(--vscode-editor-foreground, var(--jp-ui-font-color1));\n}\n\n/* Override VSCode background color */\n.cell-output-ipywidget-background:has(\n  > .cell-output-ipywidget-background > .lm-Widget > *[data-root-id]\n),\n.cell-output-ipywidget-background:has(> .lm-Widget > *[data-root-id]) {\n  background-color: transparent !important;\n}\n</style>","content_type":"text/html"}}},{"output_type":"display_data","metadata":{},"data":{"application/javascript":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.5/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/javascript"},"application/vnd.holoviews_load.v0+json":{"content":"(function(root) {\n  function now() {\n    return new Date();\n  }\n\n  const force = true;\n  const py_version = '3.7.3'.replace('rc', '-rc.').replace('.dev', '-dev.');\n  const reloading = false;\n  const Bokeh = root.Bokeh;\n\n  // Set a timeout for this load but only if we are not already initializing\n  if (typeof (root._bokeh_timeout) === \"undefined\" || (force || !root._bokeh_is_initializing)) {\n    root._bokeh_timeout = Date.now() + 5000;\n    root._bokeh_failed_load = false;\n  }\n\n  function run_callbacks() {\n    try {\n      root._bokeh_onload_callbacks.forEach(function(callback) {\n        if (callback != null)\n          callback();\n      });\n    } finally {\n      delete root._bokeh_onload_callbacks;\n    }\n    console.debug(\"Bokeh: all callbacks have finished\");\n  }\n\n  function load_libs(css_urls, js_urls, js_modules, js_exports, callback) {\n    if (css_urls == null) css_urls = [];\n    if (js_urls == null) js_urls = [];\n    if (js_modules == null) js_modules = [];\n    if (js_exports == null) js_exports = {};\n\n    root._bokeh_onload_callbacks.push(callback);\n\n    if (root._bokeh_is_loading > 0) {\n      // Don't load bokeh if it is still initializing\n      console.debug(\"Bokeh: BokehJS is being loaded, scheduling callback at\", now());\n      return null;\n    } else if (js_urls.length === 0 && js_modules.length === 0 && Object.keys(js_exports).length === 0) {\n      // There is nothing to load\n      run_callbacks();\n      return null;\n    }\n\n    function on_load() {\n      root._bokeh_is_loading--;\n      if (root._bokeh_is_loading === 0) {\n        console.debug(\"Bokeh: all BokehJS libraries/stylesheets loaded\");\n        run_callbacks()\n      }\n    }\n    window._bokeh_on_load = on_load\n\n    function on_error(e) {\n      const src_el = e.srcElement\n      console.error(\"failed to load \" + (src_el.href || src_el.src));\n    }\n\n    const skip = [];\n    if (window.requirejs) {\n      window.requirejs.config({'packages': {}, 'paths': {}, 'shim': {}});\n      root._bokeh_is_loading = css_urls.length + 0;\n    } else {\n      root._bokeh_is_loading = css_urls.length + js_urls.length + js_modules.length + Object.keys(js_exports).length;\n    }\n\n    const existing_stylesheets = []\n    const links = document.getElementsByTagName('link')\n    for (let i = 0; i < links.length; i++) {\n      const link = links[i]\n      if (link.href != null) {\n        existing_stylesheets.push(link.href)\n      }\n    }\n    for (let i = 0; i < css_urls.length; i++) {\n      const url = css_urls[i];\n      const escaped = encodeURI(url)\n      if (existing_stylesheets.indexOf(escaped) !== -1) {\n        on_load()\n        continue;\n      }\n      const element = document.createElement(\"link\");\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.rel = \"stylesheet\";\n      element.type = \"text/css\";\n      element.href = url;\n      console.debug(\"Bokeh: injecting link tag for BokehJS stylesheet: \", url);\n      document.body.appendChild(element);\n    }    var existing_scripts = []\n    const scripts = document.getElementsByTagName('script')\n    for (let i = 0; i < scripts.length; i++) {\n      var script = scripts[i]\n      if (script.src != null) {\n        existing_scripts.push(script.src)\n      }\n    }\n    for (let i = 0; i < js_urls.length; i++) {\n      const url = js_urls[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      const element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (let i = 0; i < js_modules.length; i++) {\n      const url = js_modules[i];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) !== -1 || existing_scripts.indexOf(escaped) !== -1) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onload = on_load;\n      element.onerror = on_error;\n      element.async = false;\n      element.src = url;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      document.head.appendChild(element);\n    }\n    for (const name in js_exports) {\n      const url = js_exports[name];\n      const escaped = encodeURI(url)\n      if (skip.indexOf(escaped) >= 0 || root[name] != null) {\n        if (!window.requirejs) {\n          on_load();\n        }\n        continue;\n      }\n      var element = document.createElement('script');\n      element.onerror = on_error;\n      element.async = false;\n      element.type = \"module\";\n      console.debug(\"Bokeh: injecting script tag for BokehJS library: \", url);\n      element.textContent = `\n      import ${name} from \"${url}\"\n      window.${name} = ${name}\n      window._bokeh_on_load()\n      `\n      document.head.appendChild(element);\n    }\n    if (!js_urls.length && !js_modules.length) {\n      on_load()\n    }\n  };\n\n  function inject_raw_css(css) {\n    const element = document.createElement(\"style\");\n    element.appendChild(document.createTextNode(css));\n    document.body.appendChild(element);\n  }\n\n  const js_urls = [\"https://cdn.holoviz.org/panel/1.7.5/dist/bundled/reactiveesm/es-module-shims@^1.10.0/dist/es-module-shims.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-gl-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-widgets-3.7.3.min.js\", \"https://cdn.bokeh.org/bokeh/release/bokeh-tables-3.7.3.min.js\", \"https://cdn.holoviz.org/panel/1.7.5/dist/panel.min.js\"];\n  const js_modules = [];\n  const js_exports = {};\n  const css_urls = [];\n  const inline_js = [    function(Bokeh) {\n      Bokeh.set_log_level(\"info\");\n    },\nfunction(Bokeh) {} // ensure no trailing comma for IE\n  ];\n\n  function run_inline_js() {\n    if ((root.Bokeh !== undefined) || (force === true)) {\n      for (let i = 0; i < inline_js.length; i++) {\n        try {\n          inline_js[i].call(root, root.Bokeh);\n        } catch(e) {\n          if (!reloading) {\n            throw e;\n          }\n        }\n      }\n      // Cache old bokeh versions\n      if (Bokeh != undefined && !reloading) {\n        var NewBokeh = root.Bokeh;\n        if (Bokeh.versions === undefined) {\n          Bokeh.versions = new Map();\n        }\n        if (NewBokeh.version !== Bokeh.version) {\n          Bokeh.versions.set(NewBokeh.version, NewBokeh)\n        }\n        root.Bokeh = Bokeh;\n      }\n    } else if (Date.now() < root._bokeh_timeout) {\n      setTimeout(run_inline_js, 100);\n    } else if (!root._bokeh_failed_load) {\n      console.log(\"Bokeh: BokehJS failed to load within specified timeout.\");\n      root._bokeh_failed_load = true;\n    }\n    root._bokeh_is_initializing = false\n  }\n\n  function load_or_wait() {\n    // Implement a backoff loop that tries to ensure we do not load multiple\n    // versions of Bokeh and its dependencies at the same time.\n    // In recent versions we use the root._bokeh_is_initializing flag\n    // to determine whether there is an ongoing attempt to initialize\n    // bokeh, however for backward compatibility we also try to ensure\n    // that we do not start loading a newer (Panel>=1.0 and Bokeh>3) version\n    // before older versions are fully initialized.\n    if (root._bokeh_is_initializing && Date.now() > root._bokeh_timeout) {\n      // If the timeout and bokeh was not successfully loaded we reset\n      // everything and try loading again\n      root._bokeh_timeout = Date.now() + 5000;\n      root._bokeh_is_initializing = false;\n      root._bokeh_onload_callbacks = undefined;\n      root._bokeh_is_loading = 0\n      console.log(\"Bokeh: BokehJS was loaded multiple times but one version failed to initialize.\");\n      load_or_wait();\n    } else if (root._bokeh_is_initializing || (typeof root._bokeh_is_initializing === \"undefined\" && root._bokeh_onload_callbacks !== undefined)) {\n      setTimeout(load_or_wait, 100);\n    } else {\n      root._bokeh_is_initializing = true\n      root._bokeh_onload_callbacks = []\n      const bokeh_loaded = root.Bokeh != null && (root.Bokeh.version === py_version || (root.Bokeh.versions !== undefined && root.Bokeh.versions.has(py_version)));\n      if (!reloading && !bokeh_loaded) {\n        if (root.Bokeh) {\n          root.Bokeh = undefined;\n        }\n        console.debug(\"Bokeh: BokehJS not loaded, scheduling load and callback at\", now());\n      }\n      load_libs(css_urls, js_urls, js_modules, js_exports, function() {\n        console.debug(\"Bokeh: BokehJS plotting callback run at\", now());\n        run_inline_js();\n      });\n    }\n  }\n  // Give older versions of the autoload script a head-start to ensure\n  // they initialize before we start loading newer version.\n  setTimeout(load_or_wait, 100)\n}(window));","content_type":"application/vnd.holoviews_load.v0+json"}}},{"output_type":"display_data","metadata":{},"data":{"application/vnd.holoviews_load.v0+json":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/vnd.holoviews_load.v0+json"},"application/javascript":{"content":"\nif ((window.PyViz === undefined) || (window.PyViz instanceof HTMLElement)) {\n  window.PyViz = {comms: {}, comm_status:{}, kernels:{}, receivers: {}, plot_index: []}\n}\n\n\n    function JupyterCommManager() {\n    }\n\n    JupyterCommManager.prototype.register_target = function(plot_id, comm_id, msg_handler) {\n      if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        comm_manager.register_target(comm_id, function(comm) {\n          comm.on_msg(msg_handler);\n        });\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        window.PyViz.kernels[plot_id].registerCommTarget(comm_id, function(comm) {\n          comm.onMsg = msg_handler;\n        });\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        google.colab.kernel.comms.registerTarget(comm_id, (comm) => {\n          var messages = comm.messages[Symbol.asyncIterator]();\n          function processIteratorResult(result) {\n            var message = result.value;\n            var content = {data: message.data, comm_id};\n            var buffers = []\n            for (var buffer of message.buffers || []) {\n              buffers.push(new DataView(buffer))\n            }\n            var metadata = message.metadata || {};\n            var msg = {content, buffers, metadata}\n            msg_handler(msg);\n            return messages.next().then(processIteratorResult);\n          }\n          return messages.next().then(processIteratorResult);\n        })\n      }\n    }\n\n    JupyterCommManager.prototype.get_client_comm = function(plot_id, comm_id, msg_handler) {\n      if (comm_id in window.PyViz.comms) {\n        return window.PyViz.comms[comm_id];\n      } else if (window.comm_manager || ((window.Jupyter !== undefined) && (Jupyter.notebook.kernel != null))) {\n        var comm_manager = window.comm_manager || Jupyter.notebook.kernel.comm_manager;\n        var comm = comm_manager.new_comm(comm_id, {}, {}, {}, comm_id);\n        if (msg_handler) {\n          comm.on_msg(msg_handler);\n        }\n      } else if ((plot_id in window.PyViz.kernels) && (window.PyViz.kernels[plot_id])) {\n        var comm = window.PyViz.kernels[plot_id].connectToComm(comm_id);\n        let retries = 0;\n        const open = () => {\n          if (comm.active) {\n            comm.open();\n          } else if (retries > 3) {\n            console.warn('Comm target never activated')\n          } else {\n            retries += 1\n            setTimeout(open, 500)\n          }\n        }\n        if (comm.active) {\n          comm.open();\n        } else {\n          setTimeout(open, 500)\n        }\n        if (msg_handler) {\n          comm.onMsg = msg_handler;\n        }\n      } else if (typeof google != 'undefined' && google.colab.kernel != null) {\n        var comm_promise = google.colab.kernel.comms.open(comm_id)\n        comm_promise.then((comm) => {\n          window.PyViz.comms[comm_id] = comm;\n          if (msg_handler) {\n            var messages = comm.messages[Symbol.asyncIterator]();\n            function processIteratorResult(result) {\n              var message = result.value;\n              var content = {data: message.data};\n              var metadata = message.metadata || {comm_id};\n              var msg = {content, metadata}\n              msg_handler(msg);\n              return messages.next().then(processIteratorResult);\n            }\n            return messages.next().then(processIteratorResult);\n          }\n        })\n        var sendClosure = (data, metadata, buffers, disposeOnDone) => {\n          return comm_promise.then((comm) => {\n            comm.send(data, metadata, buffers, disposeOnDone);\n          });\n        };\n        var comm = {\n          send: sendClosure\n        };\n      }\n      window.PyViz.comms[comm_id] = comm;\n      return comm;\n    }\n    window.PyViz.comm_manager = new JupyterCommManager();\n    \n\n\nvar JS_MIME_TYPE = 'application/javascript';\nvar HTML_MIME_TYPE = 'text/html';\nvar EXEC_MIME_TYPE = 'application/vnd.holoviews_exec.v0+json';\nvar CLASS_NAME = 'output';\n\n/**\n * Render data to the DOM node\n */\nfunction render(props, node) {\n  var div = document.createElement(\"div\");\n  var script = document.createElement(\"script\");\n  node.appendChild(div);\n  node.appendChild(script);\n}\n\n/**\n * Handle when a new output is added\n */\nfunction handle_add_output(event, handle) {\n  var output_area = handle.output_area;\n  var output = handle.output;\n  if ((output.data == undefined) || (!output.data.hasOwnProperty(EXEC_MIME_TYPE))) {\n    return\n  }\n  var id = output.metadata[EXEC_MIME_TYPE][\"id\"];\n  var toinsert = output_area.element.find(\".\" + CLASS_NAME.split(' ')[0]);\n  if (id !== undefined) {\n    var nchildren = toinsert.length;\n    var html_node = toinsert[nchildren-1].children[0];\n    html_node.innerHTML = output.data[HTML_MIME_TYPE];\n    var scripts = [];\n    var nodelist = html_node.querySelectorAll(\"script\");\n    for (var i in nodelist) {\n      if (nodelist.hasOwnProperty(i)) {\n        scripts.push(nodelist[i])\n      }\n    }\n\n    scripts.forEach( function (oldScript) {\n      var newScript = document.createElement(\"script\");\n      var attrs = [];\n      var nodemap = oldScript.attributes;\n      for (var j in nodemap) {\n        if (nodemap.hasOwnProperty(j)) {\n          attrs.push(nodemap[j])\n        }\n      }\n      attrs.forEach(function(attr) { newScript.setAttribute(attr.name, attr.value) });\n      newScript.appendChild(document.createTextNode(oldScript.innerHTML));\n      oldScript.parentNode.replaceChild(newScript, oldScript);\n    });\n    if (JS_MIME_TYPE in output.data) {\n      toinsert[nchildren-1].children[1].textContent = output.data[JS_MIME_TYPE];\n    }\n    output_area._hv_plot_id = id;\n    if ((window.Bokeh !== undefined) && (id in Bokeh.index)) {\n      window.PyViz.plot_index[id] = Bokeh.index[id];\n    } else {\n      window.PyViz.plot_index[id] = null;\n    }\n  } else if (output.metadata[EXEC_MIME_TYPE][\"server_id\"] !== undefined) {\n    var bk_div = document.createElement(\"div\");\n    bk_div.innerHTML = output.data[HTML_MIME_TYPE];\n    var script_attrs = bk_div.children[0].attributes;\n    for (var i = 0; i < script_attrs.length; i++) {\n      toinsert[toinsert.length - 1].childNodes[1].setAttribute(script_attrs[i].name, script_attrs[i].value);\n    }\n    // store reference to server id on output_area\n    output_area._bokeh_server_id = output.metadata[EXEC_MIME_TYPE][\"server_id\"];\n  }\n}\n\n/**\n * Handle when an output is cleared or removed\n */\nfunction handle_clear_output(event, handle) {\n  var id = handle.cell.output_area._hv_plot_id;\n  var server_id = handle.cell.output_area._bokeh_server_id;\n  if (((id === undefined) || !(id in PyViz.plot_index)) && (server_id !== undefined)) { return; }\n  var comm = window.PyViz.comm_manager.get_client_comm(\"hv-extension-comm\", \"hv-extension-comm\", function () {});\n  if (server_id !== null) {\n    comm.send({event_type: 'server_delete', 'id': server_id});\n    return;\n  } else if (comm !== null) {\n    comm.send({event_type: 'delete', 'id': id});\n  }\n  delete PyViz.plot_index[id];\n  if ((window.Bokeh !== undefined) & (id in window.Bokeh.index)) {\n    var doc = window.Bokeh.index[id].model.document\n    doc.clear();\n    const i = window.Bokeh.documents.indexOf(doc);\n    if (i > -1) {\n      window.Bokeh.documents.splice(i, 1);\n    }\n  }\n}\n\n/**\n * Handle kernel restart event\n */\nfunction handle_kernel_cleanup(event, handle) {\n  delete PyViz.comms[\"hv-extension-comm\"];\n  window.PyViz.plot_index = {}\n}\n\n/**\n * Handle update_display_data messages\n */\nfunction handle_update_output(event, handle) {\n  handle_clear_output(event, {cell: {output_area: handle.output_area}})\n  handle_add_output(event, handle)\n}\n\nfunction register_renderer(events, OutputArea) {\n  function append_mime(data, metadata, element) {\n    // create a DOM node to render to\n    var toinsert = this.create_output_subarea(\n    metadata,\n    CLASS_NAME,\n    EXEC_MIME_TYPE\n    );\n    this.keyboard_manager.register_events(toinsert);\n    // Render to node\n    var props = {data: data, metadata: metadata[EXEC_MIME_TYPE]};\n    render(props, toinsert[0]);\n    element.append(toinsert);\n    return toinsert\n  }\n\n  events.on('output_added.OutputArea', handle_add_output);\n  events.on('output_updated.OutputArea', handle_update_output);\n  events.on('clear_output.CodeCell', handle_clear_output);\n  events.on('delete.Cell', handle_clear_output);\n  events.on('kernel_ready.Kernel', handle_kernel_cleanup);\n\n  OutputArea.prototype.register_mime_type(EXEC_MIME_TYPE, append_mime, {\n    safe: true,\n    index: 0\n  });\n}\n\nif (window.Jupyter !== undefined) {\n  try {\n    var events = require('base/js/events');\n    var OutputArea = require('notebook/js/outputarea').OutputArea;\n    if (OutputArea.prototype.mime_types().indexOf(EXEC_MIME_TYPE) == -1) {\n      register_renderer(events, OutputArea);\n    }\n  } catch(err) {\n  }\n}\n","content_type":"application/javascript"}}},{"output_type":"display_data","metadata":{"application/vnd.holoviews_exec.v0+json":{"id":"dcb7d53b-405a-4705-bfe9-66cc4ed6abae"}},"data":{"text/html":{"content":"<div id='dcb7d53b-405a-4705-bfe9-66cc4ed6abae'>\n  <div id=\"c0e494f8-f54f-4455-bee9-27d68ed373ad\" data-root-id=\"dcb7d53b-405a-4705-bfe9-66cc4ed6abae\" style=\"display: contents;\"></div>\n</div>\n<script type=\"application/javascript\">(function(root) {\n  var docs_json = {\"4fa38b08-f288-4ec7-b9e5-5c5e82bba777\":{\"version\":\"3.7.3\",\"title\":\"Bokeh Application\",\"roots\":[{\"type\":\"object\",\"name\":\"panel.models.browser.BrowserInfo\",\"id\":\"dcb7d53b-405a-4705-bfe9-66cc4ed6abae\"},{\"type\":\"object\",\"name\":\"panel.models.comm_manager.CommManager\",\"id\":\"8c9e06f5-8529-4379-8b57-c5e87ee9151f\",\"attributes\":{\"plot_id\":\"dcb7d53b-405a-4705-bfe9-66cc4ed6abae\",\"comm_id\":\"4bd202dc818a43f7b857251aba930aad\",\"client_comm_id\":\"f419b9232d714e68aae2ed6b0de2ac01\"}}],\"defs\":[{\"type\":\"model\",\"name\":\"ReactiveHTML1\"},{\"type\":\"model\",\"name\":\"FlexBox1\",\"properties\":[{\"name\":\"align_content\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"align_items\",\"kind\":\"Any\",\"default\":\"flex-start\"},{\"name\":\"flex_direction\",\"kind\":\"Any\",\"default\":\"row\"},{\"name\":\"flex_wrap\",\"kind\":\"Any\",\"default\":\"wrap\"},{\"name\":\"gap\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"justify_content\",\"kind\":\"Any\",\"default\":\"flex-start\"}]},{\"type\":\"model\",\"name\":\"FloatPanel1\",\"properties\":[{\"name\":\"config\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"contained\",\"kind\":\"Any\",\"default\":true},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"right-top\"},{\"name\":\"offsetx\",\"kind\":\"Any\",\"default\":null},{\"name\":\"offsety\",\"kind\":\"Any\",\"default\":null},{\"name\":\"theme\",\"kind\":\"Any\",\"default\":\"primary\"},{\"name\":\"status\",\"kind\":\"Any\",\"default\":\"normalized\"}]},{\"type\":\"model\",\"name\":\"GridStack1\",\"properties\":[{\"name\":\"ncols\",\"kind\":\"Any\",\"default\":null},{\"name\":\"nrows\",\"kind\":\"Any\",\"default\":null},{\"name\":\"allow_resize\",\"kind\":\"Any\",\"default\":true},{\"name\":\"allow_drag\",\"kind\":\"Any\",\"default\":true},{\"name\":\"state\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"drag1\",\"properties\":[{\"name\":\"slider_width\",\"kind\":\"Any\",\"default\":5},{\"name\":\"slider_color\",\"kind\":\"Any\",\"default\":\"black\"},{\"name\":\"value\",\"kind\":\"Any\",\"default\":50}]},{\"type\":\"model\",\"name\":\"click1\",\"properties\":[{\"name\":\"terminal_output\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"debug_name\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"clears\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"ReactiveESM1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"JSComponent1\",\"properties\":[{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"ReactComponent1\",\"properties\":[{\"name\":\"use_shadow_dom\",\"kind\":\"Any\",\"default\":true},{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"AnyWidgetComponent1\",\"properties\":[{\"name\":\"use_shadow_dom\",\"kind\":\"Any\",\"default\":true},{\"name\":\"esm_constants\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}}]},{\"type\":\"model\",\"name\":\"FastWrapper1\",\"properties\":[{\"name\":\"object\",\"kind\":\"Any\",\"default\":null},{\"name\":\"style\",\"kind\":\"Any\",\"default\":null}]},{\"type\":\"model\",\"name\":\"NotificationArea1\",\"properties\":[{\"name\":\"js_events\",\"kind\":\"Any\",\"default\":{\"type\":\"map\"}},{\"name\":\"max_notifications\",\"kind\":\"Any\",\"default\":5},{\"name\":\"notifications\",\"kind\":\"Any\",\"default\":[]},{\"name\":\"position\",\"kind\":\"Any\",\"default\":\"bottom-right\"},{\"name\":\"_clear\",\"kind\":\"Any\",\"default\":0},{\"name\":\"types\",\"kind\":\"Any\",\"default\":[{\"type\":\"map\",\"entries\":[[\"type\",\"warning\"],[\"background\",\"#ffc107\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-exclamation-triangle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]},{\"type\":\"map\",\"entries\":[[\"type\",\"info\"],[\"background\",\"#007bff\"],[\"icon\",{\"type\":\"map\",\"entries\":[[\"className\",\"fas fa-info-circle\"],[\"tagName\",\"i\"],[\"color\",\"white\"]]}]]}]}]},{\"type\":\"model\",\"name\":\"Notification\",\"properties\":[{\"name\":\"background\",\"kind\":\"Any\",\"default\":null},{\"name\":\"duration\",\"kind\":\"Any\",\"default\":3000},{\"name\":\"icon\",\"kind\":\"Any\",\"default\":null},{\"name\":\"message\",\"kind\":\"Any\",\"default\":\"\"},{\"name\":\"notification_type\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_rendered\",\"kind\":\"Any\",\"default\":false},{\"name\":\"_destroyed\",\"kind\":\"Any\",\"default\":false}]},{\"type\":\"model\",\"name\":\"TemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"BootstrapTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"TemplateEditor1\",\"properties\":[{\"name\":\"layout\",\"kind\":\"Any\",\"default\":[]}]},{\"type\":\"model\",\"name\":\"MaterialTemplateActions1\",\"properties\":[{\"name\":\"open_modal\",\"kind\":\"Any\",\"default\":0},{\"name\":\"close_modal\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"request_value1\",\"properties\":[{\"name\":\"fill\",\"kind\":\"Any\",\"default\":\"none\"},{\"name\":\"_synced\",\"kind\":\"Any\",\"default\":null},{\"name\":\"_request_sync\",\"kind\":\"Any\",\"default\":0}]},{\"type\":\"model\",\"name\":\"holoviews.plotting.bokeh.raster.HoverModel\",\"properties\":[{\"name\":\"xy\",\"kind\":\"Any\",\"default\":null},{\"name\":\"data\",\"kind\":\"Any\",\"default\":null}]}]}};\n  var render_items = [{\"docid\":\"4fa38b08-f288-4ec7-b9e5-5c5e82bba777\",\"roots\":{\"dcb7d53b-405a-4705-bfe9-66cc4ed6abae\":\"c0e494f8-f54f-4455-bee9-27d68ed373ad\"},\"root_ids\":[\"dcb7d53b-405a-4705-bfe9-66cc4ed6abae\"]}];\n  var docs = Object.values(docs_json)\n  if (!docs) {\n    return\n  }\n  const py_version = docs[0].version.replace('rc', '-rc.').replace('.dev', '-dev.')\n  async function embed_document(root) {\n    var Bokeh = get_bokeh(root)\n    await Bokeh.embed.embed_items_notebook(docs_json, render_items);\n    for (const render_item of render_items) {\n      for (const root_id of render_item.root_ids) {\n\tconst id_el = document.getElementById(root_id)\n\tif (id_el.children.length && id_el.children[0].hasAttribute('data-root-id')) {\n\t  const root_el = id_el.children[0]\n\t  root_el.id = root_el.id + '-rendered'\n\t  for (const child of root_el.children) {\n            // Ensure JupyterLab does not capture keyboard shortcuts\n            // see: https://jupyterlab.readthedocs.io/en/4.1.x/extension/notebook.html#keyboard-interaction-model\n\t    child.setAttribute('data-lm-suppress-shortcuts', 'true')\n\t  }\n\t}\n      }\n    }\n  }\n  function get_bokeh(root) {\n    if (root.Bokeh === undefined) {\n      return null\n    } else if (root.Bokeh.version !== py_version) {\n      if (root.Bokeh.versions === undefined || !root.Bokeh.versions.has(py_version)) {\n\treturn null\n      }\n      return root.Bokeh.versions.get(py_version);\n    } else if (root.Bokeh.version === py_version) {\n      return root.Bokeh\n    }\n    return null\n  }\n  function is_loaded(root) {\n    var Bokeh = get_bokeh(root)\n    return (Bokeh != null && Bokeh.Panel !== undefined)\n  }\n  if (is_loaded(root)) {\n    embed_document(root);\n  } else {\n    var attempts = 0;\n    var timer = setInterval(function(root) {\n      if (is_loaded(root)) {\n        clearInterval(timer);\n        embed_document(root);\n      } else if (document.readyState == \"complete\") {\n        attempts++;\n        if (attempts > 200) {\n          clearInterval(timer);\n\t  var Bokeh = get_bokeh(root)\n\t  if (Bokeh == null || Bokeh.Panel == null) {\n            console.warn(\"Panel: ERROR: Unable to run Panel code because Bokeh or Panel library is missing\");\n\t  } else {\n\t    console.warn(\"Panel: WARNING: Attempting to render but not all required libraries could be resolved.\")\n\t    embed_document(root)\n\t  }\n        }\n      }\n    }, 25, root)\n  }\n})(window);</script>","content_type":"text/html"},"application/vnd.holoviews_exec.v0+json":{"content":"","content_type":"application/vnd.holoviews_exec.v0+json"}}}],"key":"sxbVwCktyh"}],"key":"OTcT3F1JJo"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Read the reference catalog","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kv3Y82KzgY"}],"identifier":"read-the-reference-catalog","label":"Read the reference catalog","html_id":"read-the-reference-catalog","implicit":true,"key":"XRifpe3Bhh"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"eubDLHVO1T"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"NASA NEX-GDDP-CMIP6","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"AlocUSNXJh"}],"key":"oKARBrTdts"},{"type":"text","value":" dataset is organized by GCM, Scenario and Ensemble Member. Each of these Scenario/GCM combinations is represented as a combined reference file, which was created by merging across variables and concatenating along time-steps. All of these references are organized into a simple ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SiU51X9J2D"},{"type":"inlineCode","value":".csv","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"EmuolcI0SV"},{"type":"text","value":" catalog in the schema:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"twzxb0wiSu"}],"key":"uBUZfMzkL2"},{"type":"table","position":{"start":{"line":4,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"tableRow","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"tableCell","header":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"GCM/Scenario","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"iveQ9qbvl7"}],"key":"xu9FJV5gfm"},{"type":"tableCell","header":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"url","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"uQX9zXwYVT"}],"key":"YIloJJdmxD"}],"key":"kmGhJTcOSy"}],"key":"dozP4CJqUk"},{"type":"heading","depth":2,"position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Organzing with Xarray-Datatree","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"T5knq0L8nG"}],"identifier":"organzing-with-xarray-datatree","label":"Organzing with Xarray-Datatree","html_id":"organzing-with-xarray-datatree","implicit":true,"key":"zq4dycZt3g"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":10,"column":1}},"children":[{"type":"text","value":"Not all of the GCM/Scenario reference datasets have shared spatial coordinates and many of the have slight differences in their calendar and thus time dimension.\nBecause of this, these cannot be combined into a single ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"LoMjnvoofM"},{"type":"inlineCode","value":"Xarray-Dataset","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"Z8a4P4XxxF"},{"type":"text","value":". Fortunately ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"aW3qW20qKO"},{"type":"inlineCode","value":"Xarray-Datatree","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"cRW805FHGV"},{"type":"text","value":" provides a higher level abstraction where related ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"soAl2CvQm7"},{"type":"inlineCode","value":"Xarray-Datasets","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"qF87CmBA13"},{"type":"text","value":" are organized into a tree structure where each dataset corresponds to a ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"w59lmAIia2"},{"type":"inlineCode","value":"leaf","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"KahQeFpEOm"},{"type":"text","value":".","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"ITtFRjcRoG"}],"key":"aphSbko5so"}],"key":"pWvVefhwKY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# Read the reference catalog into a Pandas DataFrame\ncat_df = pd.read_csv(\n    \"s3://carbonplan-share/nasa-nex-reference/reference_catalog_nested.csv\"\n)\n# Convert the DataFrame into a dictionary\ncatalog = cat_df.set_index(\"ID\").T.to_dict(\"records\")[0]","key":"KFfmy5l13r"},{"type":"output","id":"XCwv9U3QJcSUunhkGbAQp","data":[],"key":"ObeflOTWgl"}],"key":"K1W4EbsF1R"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Load Reference Datasets into Xarray-DataTree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"PEqYanYnYl"}],"identifier":"load-reference-datasets-into-xarray-datatree","label":"Load Reference Datasets into Xarray-DataTree","html_id":"load-reference-datasets-into-xarray-datatree","implicit":true,"key":"eY7vS7t9gr"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"In the following cell we create a function ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iFnVEd8Ooq"},{"type":"inlineCode","value":"load_ref_ds","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"QTT6aB5N2K"},{"type":"text","value":", which can be parallelized via ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MFtRGfDJg2"},{"type":"inlineCode","value":"Dask","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DWCp44OiO0"},{"type":"text","value":" to load ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"sBxAxTxw0t"},{"type":"inlineCode","value":"Kerchunk","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MrdBPHYXzk"},{"type":"text","value":" references into a dictionary of ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"SWaKMDOGGW"},{"type":"inlineCode","value":"Xarray-Datasets","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"stJMwexWUU"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nlEkmW2L2R"}],"key":"NaYORBNBRQ"}],"key":"p8wmvBFdLw"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"def load_ref_ds(url: str):\n    fs = ReferenceFileSystem(\n        url,\n        remote_protocol=\"s3\",\n        target_protocol=\"s3\",\n        remote_options={\"anon\": True},\n        target_options={\"anon\": True},\n        lazy=True,\n    )\n    return xr.open_dataset(\n        fs.get_mapper(),\n        engine=\"zarr\",\n        backend_kwargs={\"consolidated\": False},\n        chunks={\"time\": 300},\n    )\n\n\ntasks = {id: dask.delayed(load_ref_ds)(url) for id, url in catalog.items()}","key":"yHZE1YlGUF"},{"type":"output","id":"GmvPoqiaCZl_zC4kuhO36","data":[],"key":"VuJZBLG0fV"}],"key":"pmEBq5Ymmi"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Use Dask Distributed to load the Xarray-Datasets from Kerchunk reference files","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"llEBccJABn"}],"identifier":"use-dask-distributed-to-load-the-xarray-datasets-from-kerchunk-reference-files","label":"Use Dask Distributed to load the Xarray-Datasets from Kerchunk reference files","html_id":"use-dask-distributed-to-load-the-xarray-datasets-from-kerchunk-reference-files","implicit":true,"key":"BGApNwwSPC"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Using ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"ybpDkp9cZG"},{"type":"inlineCode","value":"Dask","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"o2yT4CzZIe"},{"type":"text","value":", we are loading 164 reference datasets into memory. Since they are are ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"eSmoeu90tU"},{"type":"inlineCode","value":"Xarray","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"aLO8Jwtrqg"},{"type":"text","value":" datasets the coordinates are loaded eagerly, but the underlying data is still lazy.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"W0kJpc4Aiv"}],"key":"POvquZVwCM"}],"key":"o8z3FhL1rY"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client = Client(n_workers=8)\nclient","key":"K07Jiv38og"},{"type":"output","id":"FpE4a9E041TCEv9Bm-zZD","data":[{"output_type":"stream","name":"stderr","text":"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/distributed/node.py:187: UserWarning: Port 8787 is already in use.\nPerhaps you already have a cluster running?\nHosting the HTTP server on port 35251 instead\n  warnings.warn(\n"},{"output_type":"execute_result","execution_count":4,"metadata":{},"data":{"text/plain":{"content":"<Client: 'tcp://127.0.0.1:40051' processes=8 threads=8, memory=15.62 GiB>","content_type":"text/plain"},"text/html":{"content":"<div>\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\"> </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px;\">Client</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Client-ba7bc312-6827-11f0-90b8-0022480997a9</p>\n        <table style=\"width: 100%; text-align: left;\">\n\n        <tr>\n        \n            <td style=\"text-align: left;\"><strong>Connection method:</strong> Cluster object</td>\n            <td style=\"text-align: left;\"><strong>Cluster type:</strong> distributed.LocalCluster</td>\n        \n        </tr>\n\n        \n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:35251/status\" target=\"_blank\">http://127.0.0.1:35251/status</a>\n                </td>\n                <td style=\"text-align: left;\"></td>\n            </tr>\n        \n\n        </table>\n\n        \n            <button style=\"margin-bottom: 12px;\" data-commandlinker-command=\"dask:populate-and-launch-layout\" data-commandlinker-args='{\"url\": \"http://127.0.0.1:35251/status\" }'>\n                Launch dashboard in JupyterLab\n            </button>\n        \n\n        \n            <details>\n            <summary style=\"margin-bottom: 20px;\"><h3 style=\"display: inline;\">Cluster Info</h3></summary>\n            <div class=\"jp-RenderedHTMLCommon jp-RenderedHTML jp-mod-trusted jp-OutputArea-output\">\n    <div style=\"width: 24px; height: 24px; background-color: #e1e1e1; border: 3px solid #9D9D9D; border-radius: 5px; position: absolute;\">\n    </div>\n    <div style=\"margin-left: 48px;\">\n        <h3 style=\"margin-bottom: 0px; margin-top: 0px;\">LocalCluster</h3>\n        <p style=\"color: #9D9D9D; margin-bottom: 0px;\">ed91b35c</p>\n        <table style=\"width: 100%; text-align: left;\">\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:35251/status\" target=\"_blank\">http://127.0.0.1:35251/status</a>\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Workers:</strong> 8\n                </td>\n            </tr>\n            <tr>\n                <td style=\"text-align: left;\">\n                    <strong>Total threads:</strong> 8\n                </td>\n                <td style=\"text-align: left;\">\n                    <strong>Total memory:</strong> 15.62 GiB\n                </td>\n            </tr>\n            \n            <tr>\n    <td style=\"text-align: left;\"><strong>Status:</strong> running</td>\n    <td style=\"text-align: left;\"><strong>Using processes:</strong> True</td>\n</tr>\n\n            \n        </table>\n\n        <details>\n            <summary style=\"margin-bottom: 20px;\">\n                <h3 style=\"display: inline;\">Scheduler Info</h3>\n            </summary>\n\n            <div style=\"\">\n    <div>\n        <div style=\"width: 24px; height: 24px; background-color: #FFF7E5; border: 3px solid #FF6132; border-radius: 5px; position: absolute;\"> </div>\n        <div style=\"margin-left: 48px;\">\n            <h3 style=\"margin-bottom: 0px;\">Scheduler</h3>\n            <p style=\"color: #9D9D9D; margin-bottom: 0px;\">Scheduler-bf1648f6-b34c-439d-8e65-fdada85d3e78</p>\n            <table style=\"width: 100%; text-align: left;\">\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Comm:</strong> tcp://127.0.0.1:40051\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Workers:</strong> 0 \n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Dashboard:</strong> <a href=\"http://127.0.0.1:35251/status\" target=\"_blank\">http://127.0.0.1:35251/status</a>\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total threads:</strong> 0\n                    </td>\n                </tr>\n                <tr>\n                    <td style=\"text-align: left;\">\n                        <strong>Started:</strong> Just now\n                    </td>\n                    <td style=\"text-align: left;\">\n                        <strong>Total memory:</strong> 0 B\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n\n    <details style=\"margin-left: 48px;\">\n        <summary style=\"margin-bottom: 20px;\">\n            <h3 style=\"display: inline;\">Workers</h3>\n        </summary>\n\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 0</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:45121\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:40151/status\" target=\"_blank\">http://127.0.0.1:40151/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:44379\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-byh4w163\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 1</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:37143\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:43565/status\" target=\"_blank\">http://127.0.0.1:43565/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:38043\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-068by21c\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 2</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:44191\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:44641/status\" target=\"_blank\">http://127.0.0.1:44641/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:34405\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-jfu_qbix\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 3</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:36101\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:36585/status\" target=\"_blank\">http://127.0.0.1:36585/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:43375\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-s3sl40c9\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 4</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:39897\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:36785/status\" target=\"_blank\">http://127.0.0.1:36785/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:39105\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-s23cgc3v\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 5</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:33801\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:34401/status\" target=\"_blank\">http://127.0.0.1:34401/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:44115\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-2i6nye0r\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 6</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:46265\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:45783/status\" target=\"_blank\">http://127.0.0.1:45783/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:37765\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-bonphxae\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n        <div style=\"margin-bottom: 20px;\">\n            <div style=\"width: 24px; height: 24px; background-color: #DBF5FF; border: 3px solid #4CC9FF; border-radius: 5px; position: absolute;\"> </div>\n            <div style=\"margin-left: 48px;\">\n            <details>\n                <summary>\n                    <h4 style=\"margin-bottom: 0px; display: inline;\">Worker: 7</h4>\n                </summary>\n                <table style=\"width: 100%; text-align: left;\">\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Comm: </strong> tcp://127.0.0.1:33689\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Total threads: </strong> 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Dashboard: </strong> <a href=\"http://127.0.0.1:34511/status\" target=\"_blank\">http://127.0.0.1:34511/status</a>\n                        </td>\n                        <td style=\"text-align: left;\">\n                            <strong>Memory: </strong> 1.95 GiB\n                        </td>\n                    </tr>\n                    <tr>\n                        <td style=\"text-align: left;\">\n                            <strong>Nanny: </strong> tcp://127.0.0.1:45093\n                        </td>\n                        <td style=\"text-align: left;\"></td>\n                    </tr>\n                    <tr>\n                        <td colspan=\"2\" style=\"text-align: left;\">\n                            <strong>Local directory: </strong> /tmp/dask-scratch-space/worker-amo5_jt1\n                        </td>\n                    </tr>\n\n                    \n\n                    \n\n                </table>\n            </details>\n            </div>\n        </div>\n        \n\n    </details>\n</div>\n\n        </details>\n    </div>\n</div>\n            </details>\n        \n\n    </div>\n</div>","content_type":"text/html"}}}],"key":"loZlaz8RgY"}],"key":"nhBxLId84P"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"catalog_computed = dask.compute(tasks)","key":"FnUcP4EB3U"},{"type":"output","id":"tOB_iUei5BaJKiv80T99B","data":[{"output_type":"stream","name":"stderr","text":"2025-07-24 00:47:20,184 - distributed.worker - ERROR - Compute Failed\nKey:       load_ref_ds-f9e19ef1-55d0-4c2e-ae2b-aede42b99be9\nState:     executing\nTask:  <Task 'load_ref_ds-f9e19ef1-55d0-4c2e-ae2b-aede42b99be9' load_ref_ds(...)>\nException: 'ValueError(\"Reference-FS\\'s target filesystem must have same value of asynchronous\")'\nTraceback: '  File \"/tmp/ipykernel_4280/3963997076.py\", line 10, in load_ref_ds\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py\", line 687, in open_dataset\\n    backend_ds = backend.open_dataset(\\n        filename_or_obj,\\n    ...<2 lines>...\\n        **kwargs,\\n    )\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py\", line 1578, in open_dataset\\n    store = ZarrStore.open_group(\\n        filename_or_obj,\\n    ...<10 lines>...\\n        cache_members=cache_members,\\n    )\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py\", line 664, in open_group\\n    ) = _get_open_params(\\n        ~~~~~~~~~~~~~~~~^\\n        store=store,\\n        ^^^^^^^^^^^^\\n    ...<9 lines>...\\n        zarr_format=zarr_format,\\n        ^^^^^^^^^^^^^^^^^^^^^^^^\\n    )\\n    ^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py\", line 1815, in _get_open_params\\n    zarr_group = zarr.open_group(store, **open_kwargs)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py\", line 531, in open_group\\n    sync(\\n    ~~~~^\\n        async_api.open_group(\\n        ^^^^^^^^^^^^^^^^^^^^^\\n    ...<12 lines>...\\n        )\\n        ^\\n    )\\n    ^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py\", line 163, in sync\\n    raise return_result\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py\", line 119, in _runner\\n    return await coro\\n           ^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py\", line 839, in open_group\\n    store_path = await make_store_path(store, mode=mode, storage_options=storage_options, path=path)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py\", line 363, in make_store_path\\n    store = FsspecStore.from_mapper(store_like, read_only=_read_only)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_fsspec.py\", line 202, in from_mapper\\n    fs = _make_async(fs_map.fs)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_fsspec.py\", line 57, in _make_async\\n    return fsspec.AbstractFileSystem.from_json(json.dumps(fs_dict))\\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py\", line 1480, in from_json\\n    return json.loads(blob, cls=FilesystemJSONDecoder)\\n           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/__init__.py\", line 359, in loads\\n    return cls(**kw).decode(s)\\n           ~~~~~~~~~~~~~~~~^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/decoder.py\", line 345, in decode\\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\\n               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/decoder.py\", line 361, in raw_decode\\n    obj, end = self.scan_once(s, idx)\\n               ~~~~~~~~~~~~~~^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/json.py\", line 97, in custom_object_hook\\n    return AbstractFileSystem.from_dict(dct)\\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py\", line 1556, in from_dict\\n    return cls(\\n        *json_decoder.unmake_serializable(dct.pop(\"args\", ())),\\n        **json_decoder.unmake_serializable(dct),\\n    )\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py\", line 81, in __call__\\n    obj = super().__call__(*args, **kwargs)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/implementations/reference.py\", line 770, in __init__\\n    raise ValueError(\\n    ...<2 lines>...\\n    )\\n'\n\n2025-07-24 00:47:20,276 - distributed.worker - ERROR - Compute Failed\nKey:       load_ref_ds-fdb8f380-eced-494f-97c6-7f24786b0ab1\nState:     executing\nTask:  <Task 'load_ref_ds-fdb8f380-eced-494f-97c6-7f24786b0ab1' load_ref_ds(...)>\nException: 'ValueError(\"Reference-FS\\'s target filesystem must have same value of asynchronous\")'\nTraceback: '  File \"/tmp/ipykernel_4280/3963997076.py\", line 10, in load_ref_ds\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py\", line 687, in open_dataset\\n    backend_ds = backend.open_dataset(\\n        filename_or_obj,\\n    ...<2 lines>...\\n        **kwargs,\\n    )\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py\", line 1578, in open_dataset\\n    store = ZarrStore.open_group(\\n        filename_or_obj,\\n    ...<10 lines>...\\n        cache_members=cache_members,\\n    )\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py\", line 664, in open_group\\n    ) = _get_open_params(\\n        ~~~~~~~~~~~~~~~~^\\n        store=store,\\n        ^^^^^^^^^^^^\\n    ...<9 lines>...\\n        zarr_format=zarr_format,\\n        ^^^^^^^^^^^^^^^^^^^^^^^^\\n    )\\n    ^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py\", line 1815, in _get_open_params\\n    zarr_group = zarr.open_group(store, **open_kwargs)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py\", line 531, in open_group\\n    sync(\\n    ~~~~^\\n        async_api.open_group(\\n        ^^^^^^^^^^^^^^^^^^^^^\\n    ...<12 lines>...\\n        )\\n        ^\\n    )\\n    ^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py\", line 163, in sync\\n    raise return_result\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py\", line 119, in _runner\\n    return await coro\\n           ^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py\", line 839, in open_group\\n    store_path = await make_store_path(store, mode=mode, storage_options=storage_options, path=path)\\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py\", line 363, in make_store_path\\n    store = FsspecStore.from_mapper(store_like, read_only=_read_only)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_fsspec.py\", line 202, in from_mapper\\n    fs = _make_async(fs_map.fs)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_fsspec.py\", line 57, in _make_async\\n    return fsspec.AbstractFileSystem.from_json(json.dumps(fs_dict))\\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py\", line 1480, in from_json\\n    return json.loads(blob, cls=FilesystemJSONDecoder)\\n           ~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/__init__.py\", line 359, in loads\\n    return cls(**kw).decode(s)\\n           ~~~~~~~~~~~~~~~~^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/decoder.py\", line 345, in decode\\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\\n               ~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/decoder.py\", line 361, in raw_decode\\n    obj, end = self.scan_once(s, idx)\\n               ~~~~~~~~~~~~~~^^^^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/json.py\", line 97, in custom_object_hook\\n    return AbstractFileSystem.from_dict(dct)\\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py\", line 1556, in from_dict\\n    return cls(\\n        *json_decoder.unmake_serializable(dct.pop(\"args\", ())),\\n        **json_decoder.unmake_serializable(dct),\\n    )\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py\", line 81, in __call__\\n    obj = super().__call__(*args, **kwargs)\\n  File \"/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/implementations/reference.py\", line 770, in __init__\\n    raise ValueError(\\n    ...<2 lines>...\\n    )\\n'\n\n"},{"output_type":"error","traceback":"\u001b[31m---------------------------------------------------------------------------\u001b[39m\n\u001b[31mValueError\u001b[39m                                Traceback (most recent call last)\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[5]\u001b[39m\u001b[32m, line 1\u001b[39m\n\u001b[32m----> \u001b[39m\u001b[32m1\u001b[39m catalog_computed = \u001b[43mdask\u001b[49m\u001b[43m.\u001b[49m\u001b[43mcompute\u001b[49m\u001b[43m(\u001b[49m\u001b[43mtasks\u001b[49m\u001b[43m)\u001b[49m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/dask/base.py:681\u001b[39m, in \u001b[36mcompute\u001b[39m\u001b[34m(traverse, optimize_graph, scheduler, get, *args, **kwargs)\u001b[39m\n\u001b[32m    678\u001b[39m     expr = expr.optimize()\n\u001b[32m    679\u001b[39m     keys = \u001b[38;5;28mlist\u001b[39m(flatten(expr.__dask_keys__()))\n\u001b[32m--> \u001b[39m\u001b[32m681\u001b[39m     results = \u001b[43mschedule\u001b[49m\u001b[43m(\u001b[49m\u001b[43mexpr\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mkeys\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m*\u001b[49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m    683\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m repack(results)\n\n\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[3]\u001b[39m\u001b[32m, line 10\u001b[39m, in \u001b[36mload_ref_ds\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m      1\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mload_ref_ds\u001b[39m(url: \u001b[38;5;28mstr\u001b[39m):\n\u001b[32m      2\u001b[39m     fs = ReferenceFileSystem(\n\u001b[32m      3\u001b[39m         url,\n\u001b[32m      4\u001b[39m         remote_protocol=\u001b[33m\"\u001b[39m\u001b[33ms3\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m      8\u001b[39m         lazy=\u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[32m      9\u001b[39m     )\n\u001b[32m---> \u001b[39m\u001b[32m10\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m xr.open_dataset(\n\u001b[32m     11\u001b[39m         fs.get_mapper(),\n\u001b[32m     12\u001b[39m         engine=\u001b[33m\"\u001b[39m\u001b[33mzarr\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m     13\u001b[39m         backend_kwargs={\u001b[33m\"\u001b[39m\u001b[33mconsolidated\u001b[39m\u001b[33m\"\u001b[39m: \u001b[38;5;28;01mFalse\u001b[39;00m},\n\u001b[32m     14\u001b[39m         chunks={\u001b[33m\"\u001b[39m\u001b[33mtime\u001b[39m\u001b[33m\"\u001b[39m: \u001b[32m300\u001b[39m},\n\u001b[32m     15\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py:687\u001b[39m, in \u001b[36mopen_dataset\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    675\u001b[39m decoders = _resolve_decoders_kwargs(\n\u001b[32m    676\u001b[39m     decode_cf,\n\u001b[32m    677\u001b[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,\n\u001b[32m   (...)\u001b[39m\u001b[32m    683\u001b[39m     decode_coords=decode_coords,\n\u001b[32m    684\u001b[39m )\n\u001b[32m    686\u001b[39m overwrite_encoded_chunks = kwargs.pop(\u001b[33m\"\u001b[39m\u001b[33moverwrite_encoded_chunks\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[32m--> \u001b[39m\u001b[32m687\u001b[39m backend_ds = backend.open_dataset(\n\u001b[32m    688\u001b[39m     filename_or_obj,\n\u001b[32m    689\u001b[39m     drop_variables=drop_variables,\n\u001b[32m    690\u001b[39m     **decoders,\n\u001b[32m    691\u001b[39m     **kwargs,\n\u001b[32m    692\u001b[39m )\n\u001b[32m    693\u001b[39m ds = _dataset_from_backend_dataset(\n\u001b[32m    694\u001b[39m     backend_ds,\n\u001b[32m    695\u001b[39m     filename_or_obj,\n\u001b[32m   (...)\u001b[39m\u001b[32m    705\u001b[39m     **kwargs,\n\u001b[32m    706\u001b[39m )\n\u001b[32m    707\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m ds\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py:1578\u001b[39m, in \u001b[36mopen_dataset\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1576\u001b[39m filename_or_obj = _normalize_path(filename_or_obj)\n\u001b[32m   1577\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m store:\n\u001b[32m-> \u001b[39m\u001b[32m1578\u001b[39m     store = ZarrStore.open_group(\n\u001b[32m   1579\u001b[39m         filename_or_obj,\n\u001b[32m   1580\u001b[39m         group=group,\n\u001b[32m   1581\u001b[39m         mode=mode,\n\u001b[32m   1582\u001b[39m         synchronizer=synchronizer,\n\u001b[32m   1583\u001b[39m         consolidated=consolidated,\n\u001b[32m   1584\u001b[39m         consolidate_on_close=\u001b[38;5;28;01mFalse\u001b[39;00m,\n\u001b[32m   1585\u001b[39m         chunk_store=chunk_store,\n\u001b[32m   1586\u001b[39m         storage_options=storage_options,\n\u001b[32m   1587\u001b[39m         zarr_version=zarr_version,\n\u001b[32m   1588\u001b[39m         use_zarr_fill_value_as_mask=\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[32m   1589\u001b[39m         zarr_format=zarr_format,\n\u001b[32m   1590\u001b[39m         cache_members=cache_members,\n\u001b[32m   1591\u001b[39m     )\n\u001b[32m   1593\u001b[39m store_entrypoint = StoreBackendEntrypoint()\n\u001b[32m   1594\u001b[39m \u001b[38;5;28;01mwith\u001b[39;00m close_on_error(store):\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py:664\u001b[39m, in \u001b[36mopen_group\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    638\u001b[39m \u001b[38;5;129m@classmethod\u001b[39m\n\u001b[32m    639\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mopen_group\u001b[39m(\n\u001b[32m    640\u001b[39m     \u001b[38;5;28mcls\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m    657\u001b[39m     cache_members: \u001b[38;5;28mbool\u001b[39m = \u001b[38;5;28;01mTrue\u001b[39;00m,\n\u001b[32m    658\u001b[39m ):\n\u001b[32m    659\u001b[39m     (\n\u001b[32m    660\u001b[39m         zarr_group,\n\u001b[32m    661\u001b[39m         consolidate_on_close,\n\u001b[32m    662\u001b[39m         close_store_on_close,\n\u001b[32m    663\u001b[39m         use_zarr_fill_value_as_mask,\n\u001b[32m--> \u001b[39m\u001b[32m664\u001b[39m     ) = _get_open_params(\n\u001b[32m    665\u001b[39m         store=store,\n\u001b[32m    666\u001b[39m         mode=mode,\n\u001b[32m    667\u001b[39m         synchronizer=synchronizer,\n\u001b[32m    668\u001b[39m         group=group,\n\u001b[32m    669\u001b[39m         consolidated=consolidated,\n\u001b[32m    670\u001b[39m         consolidate_on_close=consolidate_on_close,\n\u001b[32m    671\u001b[39m         chunk_store=chunk_store,\n\u001b[32m    672\u001b[39m         storage_options=storage_options,\n\u001b[32m    673\u001b[39m         zarr_version=zarr_version,\n\u001b[32m    674\u001b[39m         use_zarr_fill_value_as_mask=use_zarr_fill_value_as_mask,\n\u001b[32m    675\u001b[39m         zarr_format=zarr_format,\n\u001b[32m    676\u001b[39m     )\n\u001b[32m    678\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mcls\u001b[39m(\n\u001b[32m    679\u001b[39m         zarr_group,\n\u001b[32m    680\u001b[39m         mode,\n\u001b[32m   (...)\u001b[39m\u001b[32m    689\u001b[39m         cache_members=cache_members,\n\u001b[32m    690\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py:1815\u001b[39m, in \u001b[36m_get_open_params\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1811\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m _zarr_v3():\n\u001b[32m   1812\u001b[39m         \u001b[38;5;66;03m# we have determined that we don't want to use consolidated metadata\u001b[39;00m\n\u001b[32m   1813\u001b[39m         \u001b[38;5;66;03m# so we set that to False to avoid trying to read it\u001b[39;00m\n\u001b[32m   1814\u001b[39m         open_kwargs[\u001b[33m\"\u001b[39m\u001b[33muse_consolidated\u001b[39m\u001b[33m\"\u001b[39m] = \u001b[38;5;28;01mFalse\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m1815\u001b[39m     zarr_group = zarr.open_group(store, **open_kwargs)\n\u001b[32m   1817\u001b[39m close_store_on_close = zarr_group.store \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m store\n\u001b[32m   1819\u001b[39m \u001b[38;5;66;03m# we use this to determine how to handle fill_value\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py:531\u001b[39m, in \u001b[36mopen_group\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    454\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mopen_group\u001b[39m(\n\u001b[32m    455\u001b[39m     store: StoreLike | \u001b[38;5;28;01mNone\u001b[39;00m = \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[32m    456\u001b[39m     *,\n\u001b[32m   (...)\u001b[39m\u001b[32m    467\u001b[39m     use_consolidated: \u001b[38;5;28mbool\u001b[39m | \u001b[38;5;28mstr\u001b[39m | \u001b[38;5;28;01mNone\u001b[39;00m = \u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[32m    468\u001b[39m ) -> Group:\n\u001b[32m    469\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"Open a group using file-mode-like semantics.\u001b[39;00m\n\u001b[32m    470\u001b[39m \n\u001b[32m    471\u001b[39m \u001b[33;03m    Parameters\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m    528\u001b[39m \u001b[33;03m        The new group.\u001b[39;00m\n\u001b[32m    529\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m    530\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m Group(\n\u001b[32m--> \u001b[39m\u001b[32m531\u001b[39m         sync(\n\u001b[32m    532\u001b[39m             async_api.open_group(\n\u001b[32m    533\u001b[39m                 store=store,\n\u001b[32m    534\u001b[39m                 mode=mode,\n\u001b[32m    535\u001b[39m                 cache_attrs=cache_attrs,\n\u001b[32m    536\u001b[39m                 synchronizer=synchronizer,\n\u001b[32m    537\u001b[39m                 path=path,\n\u001b[32m    538\u001b[39m                 chunk_store=chunk_store,\n\u001b[32m    539\u001b[39m                 storage_options=storage_options,\n\u001b[32m    540\u001b[39m                 zarr_version=zarr_version,\n\u001b[32m    541\u001b[39m                 zarr_format=zarr_format,\n\u001b[32m    542\u001b[39m                 meta_array=meta_array,\n\u001b[32m    543\u001b[39m                 attributes=attributes,\n\u001b[32m    544\u001b[39m                 use_consolidated=use_consolidated,\n\u001b[32m    545\u001b[39m             )\n\u001b[32m    546\u001b[39m         )\n\u001b[32m    547\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py:163\u001b[39m, in \u001b[36msync\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    160\u001b[39m return_result = \u001b[38;5;28mnext\u001b[39m(\u001b[38;5;28miter\u001b[39m(finished)).result()\n\u001b[32m    162\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(return_result, \u001b[38;5;167;01mBaseException\u001b[39;00m):\n\u001b[32m--> \u001b[39m\u001b[32m163\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m return_result\n\u001b[32m    164\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    165\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m return_result\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py:119\u001b[39m, in \u001b[36m_runner\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    114\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    115\u001b[39m \u001b[33;03mAwait a coroutine and return the result of running it. If awaiting the coroutine raises an\u001b[39;00m\n\u001b[32m    116\u001b[39m \u001b[33;03mexception, the exception will be returned.\u001b[39;00m\n\u001b[32m    117\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    118\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m119\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;01mawait\u001b[39;00m coro\n\u001b[32m    120\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mException\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m ex:\n\u001b[32m    121\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m ex\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py:839\u001b[39m, in \u001b[36mopen_group\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    836\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m chunk_store \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    837\u001b[39m     warnings.warn(\u001b[33m\"\u001b[39m\u001b[33mchunk_store is not yet implemented\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;167;01mRuntimeWarning\u001b[39;00m, stacklevel=\u001b[32m2\u001b[39m)\n\u001b[32m--> \u001b[39m\u001b[32m839\u001b[39m store_path = \u001b[38;5;28;01mawait\u001b[39;00m make_store_path(store, mode=mode, storage_options=storage_options, path=path)\n\u001b[32m    840\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m attributes \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    841\u001b[39m     attributes = {}\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py:363\u001b[39m, in \u001b[36mmake_store_path\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    359\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m storage_options:\n\u001b[32m    360\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[32m    361\u001b[39m             \u001b[33m\"\u001b[39m\u001b[33m'\u001b[39m\u001b[33mstorage_options was provided but is not used for FSMap store_like objects. Specify the storage options when creating the FSMap instance instead.\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    362\u001b[39m         )\n\u001b[32m--> \u001b[39m\u001b[32m363\u001b[39m     store = FsspecStore.from_mapper(store_like, read_only=_read_only)\n\u001b[32m    364\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m    365\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m(\u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mUnsupported type for store_like: \u001b[39m\u001b[33m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mtype\u001b[39m(store_like).\u001b[34m__name__\u001b[39m\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m'\u001b[39m\u001b[33m\"\u001b[39m)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_fsspec.py:202\u001b[39m, in \u001b[36mfrom_mapper\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    178\u001b[39m \u001b[38;5;129m@classmethod\u001b[39m\n\u001b[32m    179\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mfrom_mapper\u001b[39m(\n\u001b[32m    180\u001b[39m     \u001b[38;5;28mcls\u001b[39m,\n\u001b[32m   (...)\u001b[39m\u001b[32m    183\u001b[39m     allowed_exceptions: \u001b[38;5;28mtuple\u001b[39m[\u001b[38;5;28mtype\u001b[39m[\u001b[38;5;167;01mException\u001b[39;00m], ...] = ALLOWED_EXCEPTIONS,\n\u001b[32m    184\u001b[39m ) -> FsspecStore:\n\u001b[32m    185\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    186\u001b[39m \u001b[33;03m    Create a FsspecStore from a FSMap object.\u001b[39;00m\n\u001b[32m    187\u001b[39m \n\u001b[32m   (...)\u001b[39m\u001b[32m    200\u001b[39m \u001b[33;03m    FsspecStore\u001b[39;00m\n\u001b[32m    201\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m202\u001b[39m     fs = _make_async(fs_map.fs)\n\u001b[32m    203\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mcls\u001b[39m(\n\u001b[32m    204\u001b[39m         fs=fs,\n\u001b[32m    205\u001b[39m         path=fs_map.root,\n\u001b[32m    206\u001b[39m         read_only=read_only,\n\u001b[32m    207\u001b[39m         allowed_exceptions=allowed_exceptions,\n\u001b[32m    208\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_fsspec.py:57\u001b[39m, in \u001b[36m_make_async\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m     55\u001b[39m     fs_dict = json.loads(fs.to_json())\n\u001b[32m     56\u001b[39m     fs_dict[\u001b[33m\"\u001b[39m\u001b[33masynchronous\u001b[39m\u001b[33m\"\u001b[39m] = \u001b[38;5;28;01mTrue\u001b[39;00m\n\u001b[32m---> \u001b[39m\u001b[32m57\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m fsspec.AbstractFileSystem.from_json(json.dumps(fs_dict))\n\u001b[32m     59\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m fsspec_version < parse_version(\u001b[33m\"\u001b[39m\u001b[33m2024.12.0\u001b[39m\u001b[33m\"\u001b[39m):\n\u001b[32m     60\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mImportError\u001b[39;00m(\n\u001b[32m     61\u001b[39m         \u001b[33mf\u001b[39m\u001b[33m\"\u001b[39m\u001b[33mThe filesystem \u001b[39m\u001b[33m'\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mfs\u001b[38;5;132;01m}\u001b[39;00m\u001b[33m'\u001b[39m\u001b[33m is synchronous, and the required \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m     62\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mAsyncFileSystemWrapper is not available. Upgrade fsspec to version \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m     63\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33m2024.12.0 or later to enable this functionality.\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m     64\u001b[39m     )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py:1480\u001b[39m, in \u001b[36mfrom_json\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1459\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m   1460\u001b[39m \u001b[33;03mRecreate a filesystem instance from JSON representation.\u001b[39;00m\n\u001b[32m   1461\u001b[39m \n\u001b[32m   (...)\u001b[39m\u001b[32m   1476\u001b[39m \u001b[33;03mat import time.\u001b[39;00m\n\u001b[32m   1477\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m   1478\u001b[39m \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34;01m.\u001b[39;00m\u001b[34;01mjson\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mimport\u001b[39;00m FilesystemJSONDecoder\n\u001b[32m-> \u001b[39m\u001b[32m1480\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m json.loads(blob, \u001b[38;5;28mcls\u001b[39m=FilesystemJSONDecoder)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/__init__.py:359\u001b[39m, in \u001b[36mloads\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    357\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m parse_constant \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m    358\u001b[39m     kw[\u001b[33m'\u001b[39m\u001b[33mparse_constant\u001b[39m\u001b[33m'\u001b[39m] = parse_constant\n\u001b[32m--> \u001b[39m\u001b[32m359\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mcls\u001b[39m(**kw).decode(s)\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/decoder.py:345\u001b[39m, in \u001b[36mdecode\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    340\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34mdecode\u001b[39m(\u001b[38;5;28mself\u001b[39m, s, _w=WHITESPACE.match):\n\u001b[32m    341\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"Return the Python representation of ``s`` (a ``str`` instance\u001b[39;00m\n\u001b[32m    342\u001b[39m \u001b[33;03m    containing a JSON document).\u001b[39;00m\n\u001b[32m    343\u001b[39m \n\u001b[32m    344\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m--> \u001b[39m\u001b[32m345\u001b[39m     obj, end = \u001b[38;5;28mself\u001b[39m.raw_decode(s, idx=_w(s, \u001b[32m0\u001b[39m).end())\n\u001b[32m    346\u001b[39m     end = _w(s, end).end()\n\u001b[32m    347\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m end != \u001b[38;5;28mlen\u001b[39m(s):\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/json/decoder.py:361\u001b[39m, in \u001b[36mraw_decode\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    352\u001b[39m \u001b[38;5;250m\u001b[39m\u001b[33;03m\"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\u001b[39;00m\n\u001b[32m    353\u001b[39m \u001b[33;03ma JSON document) and return a 2-tuple of the Python\u001b[39;00m\n\u001b[32m    354\u001b[39m \u001b[33;03mrepresentation and the index in ``s`` where the document ended.\u001b[39;00m\n\u001b[32m   (...)\u001b[39m\u001b[32m    358\u001b[39m \n\u001b[32m    359\u001b[39m \u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    360\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m361\u001b[39m     obj, end = \u001b[38;5;28mself\u001b[39m.scan_once(s, idx)\n\u001b[32m    362\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mStopIteration\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[32m    363\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m JSONDecodeError(\u001b[33m\"\u001b[39m\u001b[33mExpecting value\u001b[39m\u001b[33m\"\u001b[39m, s, err.value) \u001b[38;5;28;01mfrom\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/json.py:97\u001b[39m, in \u001b[36mcustom_object_hook\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m     95\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[33m\"\u001b[39m\u001b[33mcls\u001b[39m\u001b[33m\"\u001b[39m \u001b[38;5;129;01min\u001b[39;00m dct:\n\u001b[32m     96\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m (obj_cls := \u001b[38;5;28mself\u001b[39m.try_resolve_fs_cls(dct)) \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m97\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m AbstractFileSystem.from_dict(dct)\n\u001b[32m     98\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m (obj_cls := \u001b[38;5;28mself\u001b[39m.try_resolve_path_cls(dct)) \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m     99\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m obj_cls(dct[\u001b[33m\"\u001b[39m\u001b[33mstr\u001b[39m\u001b[33m\"\u001b[39m])\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py:1556\u001b[39m, in \u001b[36mfrom_dict\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m   1553\u001b[39m dct.pop(\u001b[33m\"\u001b[39m\u001b[33mcls\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[32m   1554\u001b[39m dct.pop(\u001b[33m\"\u001b[39m\u001b[33mprotocol\u001b[39m\u001b[33m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m)\n\u001b[32m-> \u001b[39m\u001b[32m1556\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mcls\u001b[39m(\n\u001b[32m   1557\u001b[39m     *json_decoder.unmake_serializable(dct.pop(\u001b[33m\"\u001b[39m\u001b[33margs\u001b[39m\u001b[33m\"\u001b[39m, ())),\n\u001b[32m   1558\u001b[39m     **json_decoder.unmake_serializable(dct),\n\u001b[32m   1559\u001b[39m )\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/spec.py:81\u001b[39m, in \u001b[36m__call__\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m     79\u001b[39m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mcls\u001b[39m._cache[token]\n\u001b[32m     80\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m---> \u001b[39m\u001b[32m81\u001b[39m     obj = \u001b[38;5;28msuper\u001b[39m().\u001b[34m__call__\u001b[39m(*args, **kwargs)\n\u001b[32m     82\u001b[39m     \u001b[38;5;66;03m# Setting _fs_token here causes some static linters to complain.\u001b[39;00m\n\u001b[32m     83\u001b[39m     obj._fs_token_ = token\n\n\u001b[36mFile \u001b[39m\u001b[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/fsspec/implementations/reference.py:770\u001b[39m, in \u001b[36m__init__\u001b[39m\u001b[34m()\u001b[39m\n\u001b[32m    768\u001b[39m     \u001b[38;5;28mself\u001b[39m.fss[k] = AsyncFileSystemWrapper(f, asynchronous=\u001b[38;5;28mself\u001b[39m.asynchronous)\n\u001b[32m    769\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28mself\u001b[39m.asynchronous ^ f.asynchronous:\n\u001b[32m--> \u001b[39m\u001b[32m770\u001b[39m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[32m    771\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mReference-FS\u001b[39m\u001b[33m'\u001b[39m\u001b[33ms target filesystem must have same value \u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    772\u001b[39m         \u001b[33m\"\u001b[39m\u001b[33mof asynchronous\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m    773\u001b[39m     )\n\n\u001b[31mValueError\u001b[39m: Reference-FS's target filesystem must have same value of asynchronous","ename":"ValueError","evalue":"Reference-FS's target filesystem must have same value of asynchronous"}],"key":"KfF6r5xLee"}],"key":"yXnb6xup2a"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Build an Xarray-Datatree from the dictionary of datasets","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JffecrqXHP"}],"identifier":"build-an-xarray-datatree-from-the-dictionary-of-datasets","label":"Build an Xarray-Datatree from the dictionary of datasets","html_id":"build-an-xarray-datatree-from-the-dictionary-of-datasets","implicit":true,"key":"LhCDW1N0c6"}],"key":"EsaJXSTQ7X"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dt = DataTree.from_dict(catalog_computed[0])","key":"sFV3MV3Hjg"},{"type":"output","id":"DBSVJODTV1bRd12UHU5nJ","data":[],"key":"czmp4mtcOu"}],"key":"iFUOwiJJwk"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Accessing the Datatree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"kmm6M1FafI"}],"identifier":"accessing-the-datatree","label":"Accessing the Datatree","html_id":"accessing-the-datatree","implicit":true,"key":"bbHG14iA2t"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xNxnloNn5p"},{"type":"inlineCode","value":"Datatree","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"uUkSWP9rjH"},{"type":"text","value":" is a collection of related ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"DeCj7qyiAA"},{"type":"inlineCode","value":"Xarray","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"iJszNrTRSv"},{"type":"text","value":" datasets. We can access individual datasets using ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NtuNEqGjl6"},{"type":"inlineCode","value":"UNIX","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gz0X6OJGRl"},{"type":"text","value":" syntax. In the cell below, we will access a single dataset from the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"APvU6dnRja"},{"type":"inlineCode","value":"datatree","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ohvgY7F1PK"},{"type":"text","value":".","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MH0u0QToNm"}],"key":"ZjHLCScN6P"}],"key":"oT98XHZBox"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dt[\"ACCESS-CM2/ssp585\"]\n\n# or\n\ndt[\"ACCESS-CM2\"][\"ssp585\"]","key":"Rd4zu562sT"},{"type":"output","id":"a8FtERch7gDmmRiaFjEig","data":[],"key":"zh3XPnylbU"}],"key":"sFMkZa4F8S"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":5,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Convert a Datatree node to a Dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rLdNGcDtCQ"}],"identifier":"convert-a-datatree-node-to-a-dataset","label":"Convert a Datatree node to a Dataset","html_id":"convert-a-datatree-node-to-a-dataset","implicit":true,"key":"wxmIJbjXMS"}],"key":"DtvdLGUQpq"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"dt[\"ACCESS-CM2\"][\"ssp585\"].to_dataset()","key":"JYXPiPLyFo"},{"type":"output","id":"0gLmqXVQ0Oxt3jHoTKvNI","data":[],"key":"Z9mLvQbsWN"}],"key":"Es89RbtmV7"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Operations across a Datatree","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"D66ieFa35x"}],"identifier":"operations-across-a-datatree","label":"Operations across a Datatree","html_id":"operations-across-a-datatree","implicit":true,"key":"VShZe1wjSh"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"A ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"YVOPnwBhZW"},{"type":"inlineCode","value":"Datatree","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"iHrGnav3fN"},{"type":"text","value":" contains a collection of datasets with related coordinates and variables. Using some in-built methods, we can analyze it as if it were a single dataset. Instead of looping through hundreds of ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hEWCsqavD1"},{"type":"inlineCode","value":"Xarray","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"WwPXskNL38"},{"type":"text","value":" datasets, we can apply operations across the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"StDDO7COpF"},{"type":"inlineCode","value":"Datatree","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"BsjNSJgp4X"},{"type":"text","value":". In the example below, we will lazily create a time-series.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"lcudvKCZsi"}],"key":"YVNf0ROnHQ"}],"key":"lilQEt1A9R"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"ts = dt.mean(dim=[\"lat\", \"lon\"])","key":"vYXZMBqf3F"},{"type":"output","id":"h6dKgGDurLkMCQ8gxhzO4","data":[],"key":"iuj0yBjbsy"}],"key":"iLP5qJ4BkS"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Visualize a single dataset with HvPlot","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZwuvxWbxq2"}],"identifier":"visualize-a-single-dataset-with-hvplot","label":"Visualize a single dataset with HvPlot","html_id":"visualize-a-single-dataset-with-hvplot","implicit":true,"key":"Nn1VoidxDj"}],"key":"jaGDOiUwuD"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"display(  # noqa\n    dt[\"ACCESS-CM2/ssp585\"].to_dataset().pr.hvplot(\"lon\", \"lat\", rasterize=True)\n)","key":"lsvEPeTLe0"},{"type":"output","id":"7xlyVPzcFUY6heS-2aTri","data":[],"key":"dZoOSkzNov"}],"key":"zrJnfukaYZ"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Shut down the Dask cluster","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"uui0vPF5qI"}],"identifier":"shut-down-the-dask-cluster","label":"Shut down the Dask cluster","html_id":"shut-down-the-dask-cluster","implicit":true,"key":"L0AqEF8Tgh"}],"key":"gf64a5zi4s"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"client.shutdown()","key":"Ruo6L0Qqij"},{"type":"output","id":"h-s0pkMhXc7NudrZspD1t","data":[],"key":"L6fyBOldaa"}],"key":"g5kQBkWpfr"}],"key":"cHREWL7lw8"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Use xrefcoord to Generate Coordinates","url":"/notebooks/using-references/xrefcoord","group":"Using Pre-Generated References"},"next":{"title":"Kerchunk, hvPlot, and Datashader: Visualizing datasets on-the-fly","url":"/notebooks/using-references/hvplot-datashader","group":"Using Pre-Generated References"}}},"domain":"http://localhost:3000"}
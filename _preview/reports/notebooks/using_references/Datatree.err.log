Traceback (most recent call last):
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
catalog_computed = dask.compute(tasks)
------------------

----- stderr -----
2025-06-17 19:16:41,896 - distributed.worker - ERROR - Compute Failed
Key:       load_ref_ds-fed7c839-7a32-4153-8292-fed0b340dc85
State:     executing
Task:  <Task 'load_ref_ds-fed7c839-7a32-4153-8292-fed0b340dc85' load_ref_ds(...)>
Exception: 'TypeError("Unsupported type for store_like: \'FSMap\'")'
Traceback: '  File "/tmp/ipykernel_5059/3963997076.py", line 10, in load_ref_ds\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py", line 687, in open_dataset\n    backend_ds = backend.open_dataset(\n        filename_or_obj,\n    ...<2 lines>...\n        **kwargs,\n    )\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 1578, in open_dataset\n    store = ZarrStore.open_group(\n        filename_or_obj,\n    ...<10 lines>...\n        cache_members=cache_members,\n    )\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 664, in open_group\n    ) = _get_open_params(\n        ~~~~~~~~~~~~~~~~^\n        store=store,\n        ^^^^^^^^^^^^\n    ...<9 lines>...\n        zarr_format=zarr_format,\n        ^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 1815, in _get_open_params\n    zarr_group = zarr.open_group(store, **open_kwargs)\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/_compat.py", line 43, in inner_f\n    return f(*args, **kwargs)\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py", line 529, in open_group\n    sync(\n    ~~~~^\n        async_api.open_group(\n        ^^^^^^^^^^^^^^^^^^^^^\n    ...<12 lines>...\n        )\n        ^\n    )\n    ^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py", line 163, in sync\n    raise return_result\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py", line 119, in _runner\n    return await coro\n           ^^^^^^^^^^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py", line 819, in open_group\n    store_path = await make_store_path(store, mode=mode, storage_options=storage_options, path=path)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py", line 316, in make_store_path\n    raise TypeError(msg)\n'

2025-06-17 19:16:42,019 - distributed.worker - ERROR - Compute Failed
Key:       load_ref_ds-f4f1a0dc-8111-4018-955e-df616ca03949
State:     executing
Task:  <Task 'load_ref_ds-f4f1a0dc-8111-4018-955e-df616ca03949' load_ref_ds(...)>
Exception: 'TypeError("Unsupported type for store_like: \'FSMap\'")'
Traceback: '  File "/tmp/ipykernel_5059/3963997076.py", line 10, in load_ref_ds\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py", line 687, in open_dataset\n    backend_ds = backend.open_dataset(\n        filename_or_obj,\n    ...<2 lines>...\n        **kwargs,\n    )\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 1578, in open_dataset\n    store = ZarrStore.open_group(\n        filename_or_obj,\n    ...<10 lines>...\n        cache_members=cache_members,\n    )\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 664, in open_group\n    ) = _get_open_params(\n        ~~~~~~~~~~~~~~~~^\n        store=store,\n        ^^^^^^^^^^^^\n    ...<9 lines>...\n        zarr_format=zarr_format,\n        ^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 1815, in _get_open_params\n    zarr_group = zarr.open_group(store, **open_kwargs)\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/_compat.py", line 43, in inner_f\n    return f(*args, **kwargs)\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py", line 529, in open_group\n    sync(\n    ~~~~^\n        async_api.open_group(\n        ^^^^^^^^^^^^^^^^^^^^^\n    ...<12 lines>...\n        )\n        ^\n    )\n    ^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py", line 163, in sync\n    raise return_result\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py", line 119, in _runner\n    return await coro\n           ^^^^^^^^^^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py", line 819, in open_group\n    store_path = await make_store_path(store, mode=mode, storage_options=storage_options, path=path)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py", line 316, in make_store_path\n    raise TypeError(msg)\n'

2025-06-17 19:16:42,059 - distributed.worker - ERROR - Compute Failed
Key:       load_ref_ds-fc69ca45-5546-4771-bdb5-fc590b5c1810
State:     executing
Task:  <Task 'load_ref_ds-fc69ca45-5546-4771-bdb5-fc590b5c1810' load_ref_ds(...)>
Exception: 'TypeError("Unsupported type for store_like: \'FSMap\'")'
Traceback: '  File "/tmp/ipykernel_5059/3963997076.py", line 10, in load_ref_ds\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py", line 687, in open_dataset\n    backend_ds = backend.open_dataset(\n        filename_or_obj,\n    ...<2 lines>...\n        **kwargs,\n    )\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 1578, in open_dataset\n    store = ZarrStore.open_group(\n        filename_or_obj,\n    ...<10 lines>...\n        cache_members=cache_members,\n    )\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 664, in open_group\n    ) = _get_open_params(\n        ~~~~~~~~~~~~~~~~^\n        store=store,\n        ^^^^^^^^^^^^\n    ...<9 lines>...\n        zarr_format=zarr_format,\n        ^^^^^^^^^^^^^^^^^^^^^^^^\n    )\n    ^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py", line 1815, in _get_open_params\n    zarr_group = zarr.open_group(store, **open_kwargs)\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/_compat.py", line 43, in inner_f\n    return f(*args, **kwargs)\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py", line 529, in open_group\n    sync(\n    ~~~~^\n        async_api.open_group(\n        ^^^^^^^^^^^^^^^^^^^^^\n    ...<12 lines>...\n        )\n        ^\n    )\n    ^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py", line 163, in sync\n    raise return_result\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py", line 119, in _runner\n    return await coro\n           ^^^^^^^^^^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py", line 819, in open_group\n    store_path = await make_store_path(store, mode=mode, storage_options=storage_options, path=path)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File "/home/runner/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py", line 316, in make_store_path\n    raise TypeError(msg)\n'
------------------

[31m---------------------------------------------------------------------------[39m
[31mTypeError[39m                                 Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[5][39m[32m, line 1[39m
[32m----> [39m[32m1[39m catalog_computed = [43mdask[49m[43m.[49m[43mcompute[49m[43m([49m[43mtasks[49m[43m)[49m

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/dask/base.py:681[39m, in [36mcompute[39m[34m(traverse, optimize_graph, scheduler, get, *args, **kwargs)[39m
[32m    678[39m     expr = expr.optimize()
[32m    679[39m     keys = [38;5;28mlist[39m(flatten(expr.__dask_keys__()))
[32m--> [39m[32m681[39m     results = [43mschedule[49m[43m([49m[43mexpr[49m[43m,[49m[43m [49m[43mkeys[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    683[39m [38;5;28;01mreturn[39;00m repack(results)

[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 10[39m, in [36mload_ref_ds[39m[34m()[39m
[32m      1[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mload_ref_ds[39m(url: [38;5;28mstr[39m):
[32m      2[39m     fs = ReferenceFileSystem(
[32m      3[39m         url,
[32m      4[39m         remote_protocol=[33m"[39m[33ms3[39m[33m"[39m,
[32m   (...)[39m[32m      8[39m         lazy=[38;5;28;01mTrue[39;00m,
[32m      9[39m     )
[32m---> [39m[32m10[39m     [38;5;28;01mreturn[39;00m xr.open_dataset(
[32m     11[39m         fs.get_mapper(),
[32m     12[39m         engine=[33m"[39m[33mzarr[39m[33m"[39m,
[32m     13[39m         backend_kwargs={[33m"[39m[33mconsolidated[39m[33m"[39m: [38;5;28;01mFalse[39;00m},
[32m     14[39m         chunks={[33m"[39m[33mtime[39m[33m"[39m: [32m300[39m},
[32m     15[39m     )

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/api.py:687[39m, in [36mopen_dataset[39m[34m()[39m
[32m    675[39m decoders = _resolve_decoders_kwargs(
[32m    676[39m     decode_cf,
[32m    677[39m     open_backend_dataset_parameters=backend.open_dataset_parameters,
[32m   (...)[39m[32m    683[39m     decode_coords=decode_coords,
[32m    684[39m )
[32m    686[39m overwrite_encoded_chunks = kwargs.pop([33m"[39m[33moverwrite_encoded_chunks[39m[33m"[39m, [38;5;28;01mNone[39;00m)
[32m--> [39m[32m687[39m backend_ds = backend.open_dataset(
[32m    688[39m     filename_or_obj,
[32m    689[39m     drop_variables=drop_variables,
[32m    690[39m     **decoders,
[32m    691[39m     **kwargs,
[32m    692[39m )
[32m    693[39m ds = _dataset_from_backend_dataset(
[32m    694[39m     backend_ds,
[32m    695[39m     filename_or_obj,
[32m   (...)[39m[32m    705[39m     **kwargs,
[32m    706[39m )
[32m    707[39m [38;5;28;01mreturn[39;00m ds

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py:1578[39m, in [36mopen_dataset[39m[34m()[39m
[32m   1576[39m filename_or_obj = _normalize_path(filename_or_obj)
[32m   1577[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m store:
[32m-> [39m[32m1578[39m     store = ZarrStore.open_group(
[32m   1579[39m         filename_or_obj,
[32m   1580[39m         group=group,
[32m   1581[39m         mode=mode,
[32m   1582[39m         synchronizer=synchronizer,
[32m   1583[39m         consolidated=consolidated,
[32m   1584[39m         consolidate_on_close=[38;5;28;01mFalse[39;00m,
[32m   1585[39m         chunk_store=chunk_store,
[32m   1586[39m         storage_options=storage_options,
[32m   1587[39m         zarr_version=zarr_version,
[32m   1588[39m         use_zarr_fill_value_as_mask=[38;5;28;01mNone[39;00m,
[32m   1589[39m         zarr_format=zarr_format,
[32m   1590[39m         cache_members=cache_members,
[32m   1591[39m     )
[32m   1593[39m store_entrypoint = StoreBackendEntrypoint()
[32m   1594[39m [38;5;28;01mwith[39;00m close_on_error(store):

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py:664[39m, in [36mopen_group[39m[34m()[39m
[32m    638[39m [38;5;129m@classmethod[39m
[32m    639[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_group[39m(
[32m    640[39m     [38;5;28mcls[39m,
[32m   (...)[39m[32m    657[39m     cache_members: [38;5;28mbool[39m = [38;5;28;01mTrue[39;00m,
[32m    658[39m ):
[32m    659[39m     (
[32m    660[39m         zarr_group,
[32m    661[39m         consolidate_on_close,
[32m    662[39m         close_store_on_close,
[32m    663[39m         use_zarr_fill_value_as_mask,
[32m--> [39m[32m664[39m     ) = _get_open_params(
[32m    665[39m         store=store,
[32m    666[39m         mode=mode,
[32m    667[39m         synchronizer=synchronizer,
[32m    668[39m         group=group,
[32m    669[39m         consolidated=consolidated,
[32m    670[39m         consolidate_on_close=consolidate_on_close,
[32m    671[39m         chunk_store=chunk_store,
[32m    672[39m         storage_options=storage_options,
[32m    673[39m         zarr_version=zarr_version,
[32m    674[39m         use_zarr_fill_value_as_mask=use_zarr_fill_value_as_mask,
[32m    675[39m         zarr_format=zarr_format,
[32m    676[39m     )
[32m    678[39m     [38;5;28;01mreturn[39;00m [38;5;28mcls[39m(
[32m    679[39m         zarr_group,
[32m    680[39m         mode,
[32m   (...)[39m[32m    689[39m         cache_members=cache_members,
[32m    690[39m     )

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/xarray/backends/zarr.py:1815[39m, in [36m_get_open_params[39m[34m()[39m
[32m   1811[39m     [38;5;28;01mif[39;00m _zarr_v3():
[32m   1812[39m         [38;5;66;03m# we have determined that we don't want to use consolidated metadata[39;00m
[32m   1813[39m         [38;5;66;03m# so we set that to False to avoid trying to read it[39;00m
[32m   1814[39m         open_kwargs[[33m"[39m[33muse_consolidated[39m[33m"[39m] = [38;5;28;01mFalse[39;00m
[32m-> [39m[32m1815[39m     zarr_group = zarr.open_group(store, **open_kwargs)
[32m   1817[39m close_store_on_close = zarr_group.store [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m store
[32m   1819[39m [38;5;66;03m# we use this to determine how to handle fill_value[39;00m

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/_compat.py:43[39m, in [36minner_f[39m[34m()[39m
[32m     41[39m extra_args = [38;5;28mlen[39m(args) - [38;5;28mlen[39m(all_args)
[32m     42[39m [38;5;28;01mif[39;00m extra_args <= [32m0[39m:
[32m---> [39m[32m43[39m     [38;5;28;01mreturn[39;00m f(*args, **kwargs)
[32m     45[39m [38;5;66;03m# extra_args > 0[39;00m
[32m     46[39m args_msg = [
[32m     47[39m     [33mf[39m[33m"[39m[38;5;132;01m{[39;00mname[38;5;132;01m}[39;00m[33m=[39m[38;5;132;01m{[39;00marg[38;5;132;01m}[39;00m[33m"[39m
[32m     48[39m     [38;5;28;01mfor[39;00m name, arg [38;5;129;01min[39;00m [38;5;28mzip[39m(kwonly_args[:extra_args], args[-extra_args:], strict=[38;5;28;01mFalse[39;00m)
[32m     49[39m ]

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/synchronous.py:529[39m, in [36mopen_group[39m[34m()[39m
[32m    451[39m [38;5;129m@_deprecate_positional_args[39m
[32m    452[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mopen_group[39m(
[32m    453[39m     store: StoreLike | [38;5;28;01mNone[39;00m = [38;5;28;01mNone[39;00m,
[32m   (...)[39m[32m    465[39m     use_consolidated: [38;5;28mbool[39m | [38;5;28mstr[39m | [38;5;28;01mNone[39;00m = [38;5;28;01mNone[39;00m,
[32m    466[39m ) -> Group:
[32m    467[39m [38;5;250m    [39m[33;03m"""Open a group using file-mode-like semantics.[39;00m
[32m    468[39m 
[32m    469[39m [33;03m    Parameters[39;00m
[32m   (...)[39m[32m    526[39m [33;03m        The new group.[39;00m
[32m    527[39m [33;03m    """[39;00m
[32m    528[39m     [38;5;28;01mreturn[39;00m Group(
[32m--> [39m[32m529[39m         sync(
[32m    530[39m             async_api.open_group(
[32m    531[39m                 store=store,
[32m    532[39m                 mode=mode,
[32m    533[39m                 cache_attrs=cache_attrs,
[32m    534[39m                 synchronizer=synchronizer,
[32m    535[39m                 path=path,
[32m    536[39m                 chunk_store=chunk_store,
[32m    537[39m                 storage_options=storage_options,
[32m    538[39m                 zarr_version=zarr_version,
[32m    539[39m                 zarr_format=zarr_format,
[32m    540[39m                 meta_array=meta_array,
[32m    541[39m                 attributes=attributes,
[32m    542[39m                 use_consolidated=use_consolidated,
[32m    543[39m             )
[32m    544[39m         )
[32m    545[39m     )

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py:163[39m, in [36msync[39m[34m()[39m
[32m    160[39m return_result = [38;5;28mnext[39m([38;5;28miter[39m(finished)).result()
[32m    162[39m [38;5;28;01mif[39;00m [38;5;28misinstance[39m(return_result, [38;5;167;01mBaseException[39;00m):
[32m--> [39m[32m163[39m     [38;5;28;01mraise[39;00m return_result
[32m    164[39m [38;5;28;01melse[39;00m:
[32m    165[39m     [38;5;28;01mreturn[39;00m return_result

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/core/sync.py:119[39m, in [36m_runner[39m[34m()[39m
[32m    114[39m [38;5;250m[39m[33;03m"""[39;00m
[32m    115[39m [33;03mAwait a coroutine and return the result of running it. If awaiting the coroutine raises an[39;00m
[32m    116[39m [33;03mexception, the exception will be returned.[39;00m
[32m    117[39m [33;03m"""[39;00m
[32m    118[39m [38;5;28;01mtry[39;00m:
[32m--> [39m[32m119[39m     [38;5;28;01mreturn[39;00m [38;5;28;01mawait[39;00m coro
[32m    120[39m [38;5;28;01mexcept[39;00m [38;5;167;01mException[39;00m [38;5;28;01mas[39;00m ex:
[32m    121[39m     [38;5;28;01mreturn[39;00m ex

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/api/asynchronous.py:819[39m, in [36mopen_group[39m[34m()[39m
[32m    816[39m [38;5;28;01mif[39;00m chunk_store [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[32m    817[39m     warnings.warn([33m"[39m[33mchunk_store is not yet implemented[39m[33m"[39m, [38;5;167;01mRuntimeWarning[39;00m, stacklevel=[32m2[39m)
[32m--> [39m[32m819[39m store_path = [38;5;28;01mawait[39;00m make_store_path(store, mode=mode, storage_options=storage_options, path=path)
[32m    820[39m [38;5;28;01mif[39;00m attributes [38;5;129;01mis[39;00m [38;5;28;01mNone[39;00m:
[32m    821[39m     attributes = {}

[36mFile [39m[32m~/micromamba/envs/kerchunk-cookbook/lib/python3.13/site-packages/zarr/storage/_common.py:316[39m, in [36mmake_store_path[39m[34m()[39m
[32m    314[39m     [38;5;28;01melse[39;00m:
[32m    315[39m         msg = [33mf[39m[33m"[39m[33mUnsupported type for store_like: [39m[33m'[39m[38;5;132;01m{[39;00m[38;5;28mtype[39m(store_like).[34m__name__[39m[38;5;132;01m}[39;00m[33m'[39m[33m"[39m  [38;5;66;03m# type: ignore[unreachable][39;00m
[32m--> [39m[32m316[39m         [38;5;28;01mraise[39;00m [38;5;167;01mTypeError[39;00m(msg)
[32m    318[39m     result = [38;5;28;01mawait[39;00m StorePath.open(store, path=path_normalized, mode=mode)
[32m    320[39m [38;5;28;01mif[39;00m storage_options [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m used_storage_options:

[31mTypeError[39m: Unsupported type for store_like: 'FSMap'

